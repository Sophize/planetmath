{
  "alternatePhrases": [
    "k-testable"
  ],
  "definition": "A regular language $L$ over an alphabet $\\Sigma$ is *locally testable*\nif, loosely speaking, testing whether or not an arbitrary word $u$ (over\n$\\Sigma$) is in $L$ is completely determined by its subwords of some\nfixed length. The name *locally testable* comes from the fact that\nproperties of $u$, and not $L$, determine the membership of $u$ in $L$.\n\nTo formalize this notion, we first define, for any word $u$ over\n$\\Sigma$, the set $\\operatorname{sw}_k(u)$ of all subwords of $$\\#u\\#$$\nof length $k$, where $\\#$ is a symbol not in $\\Sigma$.\n\n**Definition**. We say that a regular language $L$ is *$k$-testable* if\nfor any $u,v\\in \\Sigma^*$ such that\n$$\\operatorname{sw}_k(u)=\\operatorname{sw}_k(v),$$ we have $u\\in L$ iff\n$v\\in L$. The equation above says three things at once:\n\n-   the set of subwords of $u$ of length $k$ is equal to the set of\n    subwords of $v$ of length $k$,\n\n-   the prefix of $u$ of length $k$ is equal to the prefix of $v$ of\n    length $k$, and\n\n-   the suffix of $u$ of length $k$ is equal to the suffix of $v$ of\n    length $k$.\n\nWe say that $L$ is *locally testable* if it is $k$-testable for some\n$k\\ge 0$.\n\nIf we denote $\\mathscr{T}(k)$ the family of all $k$-testable languages,\nand $\\mathscr{T}(\\infty)$ the family of all locally testable languages,\nthen $$\\mathscr{T}(\\infty)=\\bigcup_{k=0}^{\\infty} \\mathscr{T}(k).$$\n\nNote that there are only two $0$-testable languages: $\\Sigma^*$ and\n$\\varnothing$.\n\nLet $\\mathscr{D}$ be the family of definite languages. Then\n\n1.  $\\mathscr{T}(k)\\subset \\mathscr{T}(k+1)$ for any $k\\ge 0$, and the\n    inclusion is strict.\n\n2.  $\\mathscr{D}$ and $\\mathscr{T}(k)$ are not comparable for any\n    $k> 0$. In other words, for every $k$, there is a $k$-testable\n    language that is not definite, and a definite language that is not\n    $k$-testable.\n\n3.  $\\mathscr{D}\\subset \\mathscr{T}(\\infty)$, and the inclusion is\n    strict.\n\nWe only sketch the proof here. For the first assertion, note that for\nevery $k\\ge 0$,\n$$\\operatorname{sw}_{k+1}(u)=\\operatorname{sw}_{k+1}(v)\\quad\\mbox{implies}\\quad \\operatorname{sw}_k(u)=\\operatorname{sw}_k(v).$$\nIn addition, the language $\\lbrace ab^k\\rbrace^*$ is $(k+1)$-testable\nbut not $k$-testable. For the second statement, note that\n$\\lbrace ab^k\\rbrace^*$ is not definite for any $k\\ge 0$. On the other\nhand, a finite language containing a single word of length $k+1$ is not\n$k$-testable. The last assertion is a direct consequence of the second\none.\n\nThus, the families $\\mathscr{T}(k)$ provide us with an example of an\ninfinite chain of subfamilies of the family of regular languages.\n\nWith regard to the closure properties in $\\mathscr{T}(k)$, it is easily\nsee that $\\mathscr{T}(k)$ for all $k\\ge 0$ including $k=\\infty$, is\nclosed under complementation and intersection, and hence all Boolean\noperations. The star-closure of $\\mathscr{T}(\\infty)$ is $\\mathscr{R}$,\nthe family of all regular languages.\n\n**Remark**. Every locally testable language is star-free, but not\nconversely.\n\n[9]{} A. Salomaa, [*Formal Languages*]{}, Academic Press, New York\n(1973).",
  "language": "INFORMAL",
  "phrase": "Locally Testable",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/LocallyTestable"
    }
  ],
  "indexable": true
}