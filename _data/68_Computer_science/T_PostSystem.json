{
  "alternatePhrases": [
    "normal system",
    "Post generable",
    "Post computable"
  ],
  "definition": "### Introduction {#introduction .unnumbered}\n\nA *Post canonical system* (or *Post system* for short) $\\mathfrak{P}$ is\na triple $(\\Sigma,X,P)$, such that\n\n1.  $\\Sigma$ is an alphabet,\n\n2.  $X$ is an alphabet, disjoint from $\\Sigma$, whose elements we call\n    *variables*, and\n\n3.  $P$ is a non-empty finite binary relation on $\\Sigma^*$, the Kleene\n    star of $P$, such that for every $(u,v)\\in P$,\n\n    -   $u\\in \\Sigma^*X\\Sigma^*$, and\n\n    -   if $S$ is a variable occurring in $v$, then it occurs in $u$.\n\n    An element $(x,y)\\in P$ is called a *production* of $\\mathfrak{P}$,\n    $x$ is its *antecedent*, and $y$ the *consequent*. $(x,y)\\in P$ is\n    often written $x\\to y$.\n\nThe last condition basically says that in a production $x\\to y$, $x$\nmust contain at least one variable, and $y$ can not contain any\nvariables that are not already occurring in $x$. Put it more concretely,\na production in a Post canonical system has the form\n$$a_1S_1a_2S_2\\cdots a_nS_na_{n+1} \\to b_1S_{\\phi(1)}b_2S_{\\phi(2)}\\cdots b_mS_{\\phi(m)}b_{m+1}$$\nwhere $a_i$ and $b_j$ are fixed words on $\\Sigma$, while $S_k$ are\nvariables, with $0<n$, $0\\le m$, $m\\le n$, and $\\phi$ is a function (not\nnecessarily bijective) on the set $\\lbrace 1,\\ldots, n\\rbrace$.\n\n**Examples**. Let $\\Sigma=\\lbrace a,b,c\\rbrace$ and\n$X=\\lbrace S,U,V,W\\rbrace$. Then $(\\Sigma,X,P)$ with $P$ consisting of\n$$aSb^2\\to ba,\\quad cVaWaUb\\to aWU,\\quad a^3cUbSW \\to SabU,\\quad bVa \\to aV^2c$$\nis a Post canonical system, while $(\\Sigma,X,Y)$ with $Y$ consisting of\n$$ab^2\\to ba,\\quad cVaWaUb\\to aWU,\\quad aUbSc^2W \\to ScaV,\\quad a\\to S$$\nis not, for the following reasons:\n\n-   the antecedents in the first and fourth productions do not contain a\n    variable\n\n-   the consequents in the third and fourth productions contain\n    variables ($V$ in the third, and $S$ in the fourth) which do not\n    occur in the corresponding antecedents.\n\n**Normal systems**. A Post canonical system $\\mathfrak{P}=(\\Sigma,X,P)$\nis called a *Post normal system*, or *normal system* for short, if each\nproduction has the form $aS\\to Sb$ (called a *normal production*), where\n$a,b$ are words on $\\Sigma$ and $S$ is a variable.\n\n### Languages generated by a Post system {#languages-generated-by-a-post-system .unnumbered}\n\nLet us fix a Post system $\\mathfrak{P}=(\\Sigma,X,P)$. A word $v$ is said\nto be *immediately derivable* from a word $u$ if there is a production\nof the form (1) above, such that\n$$u=a_1u_1a_2u_2\\cdots a_nu_na_{n+1} \\quad\\mbox{ and }\\quad v=b_1a_{\\phi(1)}b_2a_{\\phi(2)}\\cdots b_ma_{\\phi(m)}b_{m+1},$$\nwhere $a_i$ are words (not variables). This means that if we can write a\nword $u$ in the form of an antecedent of a production by replacing all\nthe variables with words, then we can \u201cproduce\u201d, or \u201cderive\u201d a word $v$\nin the form of the corresponding consequent, replacing the corresponding\nvariables with the corresponding words. When $v$ is immediately\nderivable from $u$, we write $u\\Rightarrow v$. Using the example above,\nwith the production $cVaWaUb\\to aWU$, we see that\n\n-   $ca^4b=caaaab\\Rightarrow a^3$ if we set $V=\\lambda$ and $W=U=a$, or\n\n-   $ca^4b=caaaab\\Rightarrow a^2$ if we set $V=a$ and exactly one of\n    $W,U=a$ and the other $\\lambda$.\n\nA word $v$ is *derivable* from a word $u$ if there is a finite sequence\nof words $u_1,\\ldots,u_n$ such that\n$$u=u_1\\Rightarrow u_2\\Rightarrow \\cdots \\Rightarrow u_n=v.$$ When $v$\nis derivable from $u$, we write $u{\\stackrel{*}{\\Rightarrow}}v$. Again,\nfollowing from the example above, we see that\n$c^2abab^2{\\stackrel{*}{\\Rightarrow}}ac$, since\n$$c^2abab^2=ccababb \\Rightarrow ab^2 \\Rightarrow ba \\Rightarrow ac.$$\nGiven a finite subset $A$ of words on $\\Sigma$, let $T_A$ be the set of\nall words derivable from words in $A$. Elements of $A$ are called\n*axioms* of $\\mathfrak{P}$ and elements of $T_A$ *theorems* (of\n$\\mathfrak{P}$ derived from axioms of $A$). Intuitively, we see that the\nPost system $\\mathfrak{P}$ is a language generating machine that creates\nthe language $T_A$ via a set $A$ of axioms. In general, we say that a\nlanguage $M$ over an alphabet $\\Sigma$ is *generable by a Post system*\nif there is a Post system $\\mathfrak{P}=(\\Sigma_1, X,P)$ such that\n$\\Sigma\\subseteq \\Sigma_1$, a finite set $A$ of axioms on $\\Sigma_1$\nsuch that $M=T_A\\cap \\Sigma^*$.\n\n**Remarks**.\n\n-   If a language is generable by a Post system, it is generable by a\n    normal system.\n\n-   A language is generable by a Post system iff it is generable by a\n    semi-Thue system. In this sense, Post systems and semi-Thue systems\n    are \u201cequivalent\u201d.\n\n-   Instead of allowing for one antecedent and one consequent in any\n    production, one can have a more generalized system where one\n    production involves a finite number of antecedents as well as a\n    finite number of consequents: $$\\left\\{ \\begin{array}{c}\n    a_{11}S_{11}a_{12}S_{12}\\cdots a_{1n_1}S_{1n_1}a_{1,n_1+1}, \\\\ \\vdots \\\\ \n    a_{p1}S_{p1}a_{p2}S_{p2}\\cdots a_{pn_p}S_{pn_p}a_{p,n_p+1} \\end{array} \\right\\} \n    \\to \n    \\left\\{ \\begin{array}{c}\n    b_{11}S_{\\phi_1(1)}b_{12}S_{\\phi_1(2)}\\cdots b_{1m}S_{\\phi_1(m_1)}b_{1,m_1+1}, \\\\ \\vdots \\\\ \n    b_{q1}S_{\\phi_q(1)}b_{q2}S_{\\phi_q(2)}\\cdots b_{qm}S_{\\phi_q(m_q)}b_{q,m+1} \\end{array} \\right\\}$$\n    where each $\\phi_i$ is a function from $\\lbrace 1,\\ldots,m_i\\rbrace$\n    to\n    $\\lbrace (1,1),\\ldots,(1,n_1),\\ldots, (p,1),\\ldots, (p,n_p)\\rbrace$.\n    We may define $b$ to be immediately derivable from $a$ if $a$ can be\n    expressed using *each* of the antecedents by substituting the\n    variables $S_{ij}$ by words $c_{ij}\\in \\Sigma^*$, and $b$ can be\n    expressed in *at least one* of the consequents by the corresponding\n    substitutions (of $S_{\\phi_i(j)}$ into $c_{\\phi_i(j)}$). It can be\n    shown that any language generated by this more general system is in\n    fact Post generable!\n\n-   It can be shown that a language is Post-generable iff it is\n    recursively enumerable.\n\n### Post Computability {#post-computability .unnumbered}\n\nFor any positive integer $m$, and an $m$-tuple\n$\\overline{n}:=(n_1,\\ldots,n_m)$ of natural numbers, we may associate a\nword $$E(\\overline{n}):=ab^{n_1}ab^{n_2}a\\cdots ab^{n_m}a.$$ Let\n$f:\\mathbb{N}^m \\to \\mathbb{N}$ be a partial function. Define\n$$L(f):=\\lbrace E(\\overline{n})cE(f(\\overline{n})) \\mid \\overline{n}\\in \\operatorname{dom}(f)\\rbrace.$$\nWe say that $f$ is *Post-computable* if $L(f)$ is Post-generable. As\nexpected from the last remark in the previous section, a partial\nfunction is Turing-computable iff it is Post-computable.\n\n[9]{} M. Davis, [*Computability and Unsolvability*]{}. Dover\nPublications, New York (1982). N. Cutland, [*Computability: An\nIntroduction to Recursive Function Theory*]{}. Cambridge University\nPress, (1980). M. Minsky, [*Computation: Finite and Infinite\nMachines*]{}. Prentice Hall, (1967).",
  "language": "INFORMAL",
  "phrase": "Post System",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/PostSystem"
    }
  ],
  "indexable": true
}