{
  "alternatePhrases": [],
  "definition": "If $f(n)$ is any function and $T$ is a Turing machine (of any kind)\nwhich halts on all inputs, we say that $T$ is time bounded by $f(n)$ if\nfor any input $x$ with length $|x|$, $T$ halts after at most $f(|x|)$\nsteps.\n\nFor a decision problem $L$ and a class $K$ of Turing machines, we say\nthat $L\\in KTIME(f(n))$ if there is a Turing machine $T\\in K$ bounded by\n$f(n)$ which decides $L$. If $R$ is a search problem then\n$R\\in KTIME(f(n))$ if $L(R)\\in KTIME(f(n))$. The most common classes are\nall restricted to one read-only input tape and one output/work tape (and\nin some cases a one-way, read-only guess tape) and are defined as\nfollows:\n\n-   $D$ is the class of deterministic Turing machines. (In this case\n    $KTIME$ is written $DTIME$.)\n\n-   $N$ is the class of non-deterministic Turing machines (and so\n    $KTIME$ is written $NTIME$).\n\n-   $R$ is the class of positive one-sided error Turing machines and\n    $coR$ the class of negative one-sided error machines\n\n-   $BP$ is the class of two-sided error machines\n\n-   $P$ is the class of minimal error machines\n\n-   $ZP$ is the class of zero error machines\n\nAlthough $KTIME(f(n))$ is a time complexity class for any $f(n)$, in\nactual use time complexity classes are usually the union of\n$KTIME(f(n))$ for many $f$. If $\\Phi$ is a class of functions then\n$KTIME(\\Phi)=\\bigcup_{f\\in\\Phi} KTIME(f(n))$. Most commonly this is used\nwhen $\\Phi=\\mathcal{O}(f(n))$.\n\nThe most important time complexity classes are the polynomial classes:\n\n$$K\\mathcal{P}=\\bigcup_{i\\in\\mathbb{N}} KTIME(n^i)$$\n\nWhen $K=D$ this is called just $\\mathcal{P}$, the class of problems\ndecidable in polynomial time. One of the major outstanding problems in\nmathematics is the question of whether $\\mathcal{P}=\\mathcal{NP}$.\n\nWe say a problem $\\pi\\in KSPACE(f(n))$ if there is a Turing machine\n$T\\in K$ which solves $\\pi$, always halts, and never uses more than\n$f(n)$ cells of its output/work tape. As above, if $\\Phi$ is a class of\nfunction then $KSPACE(\\Phi)=\\bigcup_{f\\in\\Phi} KSPACE(f(n))$\n\nThe most common space complexity classes are\n$K\\mathcal{L}=KSPACE(\\mathcal{O}(\\log n))$. When $K=D$ this is just\ncalled $\\mathcal{L}$.\n\nIf $\\mathcal{C}$ is any complexity class then $\\pi\\in co\\mathcal{C}$ if\n$\\pi$ is a decision problem and $\\overline{\\pi}\\in\\mathcal{C}$ or $\\pi$\nis a search problem and $L(\\pi)\\in co\\mathcal{C}$. Of course, this\ncoincides with the definition of $coR$ above. Clearly\n$co(co\\mathcal{C})=\\mathcal{C}$.\n\nSince a machine with a time complexity $f(n)$ cannot possibly use more\nthan $f(n)$ cells, $KTIME(f(n))\\subseteq KSPACE(f(n))$. If\n$K\\subseteq K^\\prime$ then $KTIME(f(n))\\subseteq K^\\prime TIME(f(n))$\nand similarly for space.\n\nThe following are all trivial, following from the fact that some classes\nof machines accept and reject under stricter circumstances than others:\n\n$$D\\subseteq ZP=R\\cap coR$$ $$R\\cup coR\\subseteq BP\\cap N$$\n$$BP \\subseteq P$$",
  "language": "INFORMAL",
  "phrase": "Complexity Class",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/ComplexityClass"
    }
  ],
  "indexable": true
}