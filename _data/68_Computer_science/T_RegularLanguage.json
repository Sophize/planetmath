{
  "alternatePhrases": [
    "type-3 language",
    "type-3 grammar",
    "regular set",
    "regular event"
  ],
  "definition": "A *regular grammar* is a context-free grammar where a production has one\nof the following three forms:\n$$A\\to \\lambda,\\qquad A\\to u, \\qquad A\\to vB$$ where $A,B$ are\nnon-terminal symbols, $u,v$ are terminal words, and $\\lambda$ the empty\nword. In BNF, they are: $$\\begin{aligned}\n\\verb.<.\\textit{non-terminal}\\verb.>. & ::= & terminal \\\\\n\\verb.<.\\textit{non-terminal}\\verb.>. & ::= & terminal\\,\\verb.<.\\textit{non-terminal}\\verb.>. \\\\\n\\verb.<.\\textit{non-terminal}\\verb.>. & ::= & \\lambda\\end{aligned}$$ A\n*regular language* (also known as a *regular set* or a *regular event*)\nis the set of strings generated by a regular grammar. Regular grammars\nare also known as Type-3 grammars in the Chomsky hierarchy.\n\nA regular grammar can be represented by a deterministic or\nnon-deterministic finite automaton. Such automata can serve to either\ngenerate or accept sentences in a particular regular language. Note that\nsince the set of regular languages is a subset of context-free\nlanguages, any deterministic or non-deterministic finite automaton can\nbe simulated by a pushdown automaton.\n\nThere is also a close relationship between regular languages and regular\nexpressions. With every regular expression we can associate a regular\nlanguage. Conversely, every regular language can be obtained from a\nregular expression. For example, over the alphabet\n$\\lbrace a,b,c\\rbrace$, the regular language associated with the regular\nexpression $a(b\\cup c)^*a$ is the set\n$$\\lbrace a\\rbrace \\circ \\lbrace b,c\\rbrace^* \\circ \\lbrace a\\rbrace=\\lbrace awa\\mid w\\mbox{ is a word in two letters }b\\mbox{ and }c\\rbrace,$$\nwhere $\\circ$ is the concatenation operation, and $*$ is the Kleene star\noperation. Note that $w$ could be the empty word $\\lambda$.\n\nYet another way of describing a regular language is as follows: take any\nalphabet $\\Sigma$. Let $\\mathcal{R}(\\Sigma)$ be the smallest subset of\n$P(\\Sigma^*)$ (the power set of the set of words over $\\Sigma$, in other\nwords, the set of languages over $\\Sigma$), among all subsets of\n$P(\\Sigma^*)$ with the following properties:\n\n-   $\\mathcal{R}(\\Sigma)$ contains all sets of cardinality no more than\n    1 (i.e., $\\varnothing$ and singletons);\n\n-   $\\mathcal{R}(\\Sigma)$ is closed under set-theoretic union,\n    concatenation, and Kleene star operations.\n\nThen $L$ is a regular language over $\\Sigma$ iff\n$L\\in \\mathcal{R}(\\Sigma)$.\n\n**Normal form**. Every regular language can be generated by a grammar\nwhose productions are either of the form $A\\to aB$ or of the form\n$A\\to \\lambda$, where $A,B$ are non-terminal symbols, and $a$ is a\nterminal symbol. Furthermore, for every pair $(A,a)$, there is exactly\none production of the form $A\\to aB$.\n\n**Remark**. Closure properties on the family of regular languages are:\nunion, intersection, complementation, set difference, concatenation,\nKleene star, homomorphism, inverse homomorphism, and reversal.\n\n[9]{} A. Salomaa [*Computation and Automata, Encyclopedia of Mathematics\nand Its Applications, Vol. 25*]{}. Cambridge (1985).",
  "language": "INFORMAL",
  "phrase": "Regular Language",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/RegularLanguage"
    }
  ],
  "indexable": true
}