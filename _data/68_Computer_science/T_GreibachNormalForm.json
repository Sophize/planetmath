{
  "alternatePhrases": [
    "GNF"
  ],
  "definition": "A formal grammar $G=(\\Sigma,N,P,\\sigma)$ is said to be in *Greibach\nnormal form* if every production has the following form: $$A\\to aW$$\nwhere $A \\in N$ (a non-terminal symbol), $a \\in \\Sigma$ (a terminal\nsymbol), and $W\\in N^*$ (a word over $N$).\n\nA formal grammar in Greibach normal form is a context-free grammar.\nMoreover, any context-free language not containing the empty word\n$\\lambda$ can be generated by a grammar in Greibach normal form. And if\na context-free language $L$ contains $\\lambda$, then $L$ can be\ngenerated by a grammar that is in Greibach normal form, with the\naddition of the production $\\sigma \\to \\lambda$.\n\nLet $L$ be a context-free language not containing $\\lambda$, and let\n$G=(\\Sigma,N,P,\\sigma)$ be a grammar in Greibach normal form generating\n$L$. We construct a PDA $M$ from $G$ based on the following\nspecifications:\n\n1.  $M$ has one state $p$,\n\n2.  the input alphabet of $M$ is $\\Sigma$,\n\n3.  the stack alphabet of $M$ is $N$,\n\n4.  the initial stack symbol of $M$ is the start symbol $\\sigma$ of $G$,\n\n5.  the start state of $M$ is the only state of $M$, namely $p$\n\n6.  there are no final states,\n\n7.  the transition function $T$ of $M$ takes $(p,a,A)$ to the singleton\n    $\\lbrace (p,W)\\rbrace$, provided that $A\\to aW$ is a production of\n    $G$. Otherwise, $T(p,a,A)=\\varnothing$.\n\nIt can be shown that $L=L(M)$, the language accepted on empty stack, by\n$M$. If we further define\n$T(p,\\lambda,\\sigma):=\\lbrace (p,\\lambda)\\rbrace$, then $M$ accepts\n$L\\cup \\lbrace\\lambda\\rbrace$. As a result, any context-free language is\naccepted by some PDA.\n\n[9]{} J.E. Hopcroft, J.D. Ullman, [*Formal Languages and Their Relation\nto Automata*]{}, Addison-Wesley, (1969).",
  "language": "INFORMAL",
  "phrase": "Greibach Normal Form",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/GreibachNormalForm"
    }
  ],
  "indexable": true
}