{
  "alternatePhrases": [
    "AFL",
    "full trio"
  ],
  "definition": "Abstract families of languages are abstractions of the families of\nlanguages defined by the Chomsky hierarchy in that they are not\nnecessarily defined by grammars, and yet share the same sets of closure\noperations as the Chomsky language families do.\n\nWe begin with a word about a family of languages. A family of languages\nis a defined as a pair $(V,\\mathscr{L})$ of sets such that each\n$L\\in \\mathscr{L}$ is a language over some alphabet $\\Sigma\\subseteq V$.\nIn practice, we omit $V$ and denote $\\mathscr{L}$ as a family of\nlanguages. There is no restriction placed on the cardinality of $V$.\nNote that if $V$ is finite, then $\\mathscr{L}$ is just a subset of the\nset $\\mathscr{L}(V)$ of all languages over $V$. If $V$ is infinite, let\nus also denote $\\mathscr{L}(V)$ to be the family of all languages over\nfinite subsets of $V$.\n\n**Definition**. Let $\\mathscr{L}$ be a family of languages. Then\n$\\mathscr{L}$ is defined as a *ray*, a *cylinder*, a *trio*, a *cone*,\nan *abstract family of language* or *AFL*, or a *full AFL*, if it\ncontains a non-empty language, and is closed under the operations marked\nby X in the appropriate cells below.\n\n                operation                 ray   cylinder   trio   cone   AFL   full AFL\n  -------------------------------------- ----- ---------- ------ ------ ----- ----------\n                  union                                                   X       X\n               homomorphism                                        X              X\n       $\\lambda$-free homomorphism                          X             X   \n           inverse homomorphism            X       X        X      X      X       X\n   intersection with a regular language            X        X      X      X       X\n               Kleene plus                                                X       X\n\nA cone is also called a *full trio*. It is clear that a family of\nlanguages is a full AFL iff it an AFL and a cone. We also have the\nfollowing obvious implications: $$\\xymatrix@R-=2pt{\n\\mbox{full AFL}\\ar[rr] &&\\mbox{cone} \\ar[drr] &&&& \\\\\n&&&& \\mbox{cylider} \\ar[rr] &&\\mbox{ray} \\\\\n\\mbox{AFL}\\ar[rr] &&\\mbox{trio} \\ar[urr] &&&&\n}$$ However, none of the arrows can be reversed.\n\nMoreover, we have the following:\n\nThe families $\\mathscr{L}_i$ of languages, where $i=0,2,3$, defined by\nthe Chomsky hierarchy, are all full AFL. $\\mathscr{L}_1$ is an AFL not a\nfull AFL.\n\nThere exists a cone that is not a full AFL (hence not an AFL). There\nexists an AFL (full AFL) that is not one of the Chomsky language\nfamilies: the family of recursive languages is an AFL not a full AFL,\nand the family of indexed languages is a full AFL.\n\nBelow are some other closure properties related the specific families of\nlanguages defined above:\n\n-   properties implying cones, AFLs, or full AFLs: let $\\mathscr{L}$ be\n    a family of languages,\n\n    -   if $\\mathscr{L}$ contains a language containing a non-empty\n        word, and is closed under union, Kleene plus, $\\lambda$-free\n        regular substitution, intersection with a regular language, and\n        restricted homomorphism, then it is an AFL.\n\n    -   if the restricted homomorphism in the above statement is\n        replaced by an arbitrary homomorphism, then $\\mathscr{L}$ is a\n        full AFL\n\n    -   if $\\mathscr{L}$ is $\\lambda$-free and contains all\n        $\\lambda$-free regular languages, and is closed under\n        intersection with regular languages, $\\lambda$-free\n        substitution, and restricted homomorphism, then it is an AFL\n\n    -   if $\\mathscr{L}$ contains $\\mathscr{L}_3$, the family of all\n        regular languages, and is closed under intersection with a\n        regular language and substitution, then it is a full AFL\n\n-   characterizations of cones, AFLs, or full AFLs: let $\\mathscr{L}$ be\n    a family of languages,\n\n    -   $\\mathscr{L}$ is a cone iff it is closed under rational\n        transduction\n\n    -   suppose $\\mathscr{L}$ contains a language containing a non-empty\n        word, then $\\mathscr{L}$ is an AFL iff it is closed under union,\n        Kleene plus, $\\lambda$-free regular substitution, intersection\n        with a regular language, and restricted homomorphism\n\n    -   again suppose $\\mathscr{L}$ contains a language containing a\n        non-empty word, then $\\mathscr{L}$ is an AFL iff it is closed\n        under union, Kleene star, regular substitution, intersection\n        with a regular language, and homomorphism\n\n-   properties of cones, AFLs, or full AFLs:\n\n    -   Every cone contains $\\mathscr{L}_3$.\n\n    -   An AFL is closed under concatenation, and so is a full AFL.\n\n    -   Every AFL contains the family of $\\lambda$-free regular\n        languages.\n\n    -   If the AFL is not $\\lambda$-free (meaning it contains a language\n        containing the empty word $\\lambda$), then it contains\n        $\\mathscr{L}_3$. Furthermore, such an AFL is closed under Kleene\n        star.\n\n    -   Every AFL is closed under $\\lambda$-free GSM mapping.\n\n    -   Every cone or full AFL is closed under GSM mapping.\n\n**Remark**. When a family of languages satisfies none of the closure\nproperties listed in the table above, it is said to be *anti-AFL*. For\nexample, the family of languages generated by L-systems is anti-AFL.\n\n[9]{} S. Ginsburg, S. Greibach, J. Hopcroft, [*Studies in Abstract\nFamilies of Language. Memoirs of the American Mathematical Society,\nNo.87*]{}, (1969). S. Ginsburg, E. Spanier, [*Substitution in families\nof languages. Information Sci. 2*]{}, (1970) pp 83-110. A. Salomaa,\n[*Formal Languages*]{}, Academic Press, New York (1973). A. Mateescu, A.\nSalomaa, [*Handbook of Formal Languages: Volume 1. Word, Language,\nGrammar*]{}, Springer, (1997). N. Pippenger, [*Theories of\nComputability*]{}, Cambridge University Press (1997).",
  "language": "INFORMAL",
  "phrase": "Abstract Family Of Languages",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/AbstractFamilyOfLanguages"
    }
  ],
  "indexable": true
}