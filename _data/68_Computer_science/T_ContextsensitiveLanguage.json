{
  "alternatePhrases": [
    "type-1 language",
    "type-1 grammar"
  ],
  "definition": "A *context-sensitive language* is a language over some alphabet\ngenerated by generated by some known as a *context-sensitive grammar*.\n\nFormally, a *context-sensitive language* is a formal grammar\n$G=(\\Sigma, N, P, \\sigma)$, such that given any production in $P$, it\n\n1.  either has the form $$uXv\\to uwv,$$ where $X\\in N$,\n    $u,v,w\\in \\Sigma^*$, and $w\\ne \\lambda$, the empty word,\n\n2.  or is $\\sigma\\to \\lambda$, provided that the start symbol $\\sigma$\n    does not occur on the right side of any productions in $P$.\n\nIn other words, if $G$ does not contain the production\n$\\sigma\\to \\lambda$, then any production will have the form in condition\n1. On the other hand, if $G$ does contain $\\sigma\\to \\lambda$, then for\nany production $uXv\\to uwv$ of $G$, $\\sigma$ does not occur in $uwv$.\n\nThe reason for including the second condition is to ensure the\npossibility that $\\lambda$ may be generated by the grammar.\n\nOne may interpret the first condition as follows: the non-terminal\nsymbol $X$ can only be transformed into the word $w$ if it is surrounded\nby $u$ and $v$, or that it is in the \u201ccontext\u201d of $uXv$. If in each\nproduction $uXv\\to uwv$ of $G$, $u=v=\\lambda$, (so that $X$ no longer\nhas a \u201ccontext\u201d), then $G$ is a context-free grammar.\n\nGiven a context-sensitive grammar $G$, the *context-sensitive language*\ngenerated by $G$ is $L(G)$. In other words,\n$$L(G):=\\lbrace v\\in T^*\\mid \\sigma\\stackrel{*}{\\to} v\\rbrace,$$ where\n$T=\\Sigma-N$ is the set of terminals, and $\\sigma\\stackrel{*}{\\to} v$\nmeans that the word $v$ over $\\Sigma$ is produced after a finite number\nof applications of the productions in $P$ to $\\sigma$.\n\nWith condition 2, we see that a context-sensitive language contains\n$\\lambda$ iff it is generated by a context-sensitive grammar containing\n$\\sigma\\to \\lambda$. With condition 2, every context-free language is\ncontext-sensitive. Without condition 2, every $\\lambda$-free\ncontext-free language is $\\lambda$-free context-sensitive.\n\n$\\lbrace a^nb^nc^n \\mid n\\ge 0\\rbrace$ and\n$\\lbrace a^{2^n} \\mid n\\ge 0 \\rbrace$ are examples of context-sensitive\nlanguages that are not context-free, the second of which is\n$\\lambda$-free.\n\n**Remarks**.\n\n1.  A formal grammar $G$ is said to be *length-increasing* if for every\n    production $U\\to V$ of $G$, the length of $U$ is at most the length\n    of $V$: $|U|\\le |V|$. Every context-sensitive grammar not containing\n    $\\sigma\\to \\lambda$ (condition 2) is length-increasing. Conversely,\n    any language generated by a length-increasing grammar is\n    context-sensitive.\n\n2.  The minimal automaton required for processing a context-sensitive\n    languages is a bounded non-deterministic Turing machine (bounded\n    linear automaton).\n\n3.  The family of context-sensitive languages has the following closure\n    properties: union, intersection, concatenation, Kleene star,\n    reversal, and complementation (proved in 1988). It is not closed\n    under homomorphism.\n\n4.  In the Chomsky hierarchy, context-sensitive grammars are at Level 1.\n    In fact, every context-sensitive language is recursive. The converse\n    is not true, however.\n\n5.  Given a context-sensitive language $L$ and a word $w$, it is\n    decidable whether $w\\in L$.\n\n[9]{} A. Salomaa, [*Formal Languages*]{}, Academic Press, New York\n(1973). J.E. Hopcroft, J.D. Ullman, [*Formal Languages and Their\nRelation to Automata*]{}, Addison-Wesley, (1969).",
  "language": "INFORMAL",
  "phrase": "Context-Sensitive Language",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/ContextsensitiveLanguage"
    }
  ],
  "indexable": true
}