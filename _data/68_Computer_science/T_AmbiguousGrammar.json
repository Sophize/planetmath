{
  "alternatePhrases": [],
  "definition": "Let $G=(\\Sigma, N, P, \\sigma)$ be a context-free grammar, and $L(G)$ the\nlanguage generated by it. Since every word in $L(G)$ has at least one\nleftmost derivation, let us only consider leftmost derivations of words.\n\n**Definition**. $G$ is said to be *unambiguous* if every word in $L(G)$\nhas exactly one leftmost derivation. Otherwise, $G$ is said to be\n*ambiguous*.\n\nFor an example of an ambiguous grammar, let $G$ be the grammar\nconsisting of $a,b$ as terminal symbols, $\\sigma,X$ as non-terminal\nsymbols, and $\\sigma\\to a$, $\\sigma \\to ab\\sigma b$, $\\sigma \\to aXb$,\nand $X\\to b\\sigma$ as productions. By definition, $G$ is context-free.\nThen the word $abab$ has\n\n-   $\\sigma\\to ab\\sigma b \\to abab$, and\n\n-   $\\sigma\\to aXb \\to ab\\sigma b \\to abab$,\n\ntwo leftmost derivations (corresponding to the following derivation\ntrees).\n\n![image](tree.eps)\n\nHence $G$ is ambiguous.\n\nAn example of an unambiguous grammar can be found when we convert the\nlanguage formation rules of the classical propositional logic to a\nformal grammar. This grammar is context-free. By unique readability of\nwell-formed formulas (words in this language), we conclude that the\ngrammar is unambiguous.\n\n**Remarks**.\n\n-   A grammar $G$ is unambiguous iff every word in $L(G)$ corresponds to\n    a uniuqe derivation tree, since every derivation tree corresponds to\n    a unique leftmost derivation.\n\n-   Deciding whether a context-free grammar is ambiguous is undecidable\n    unless it has only one terminal symbol.\n\nThe concept of ambiguity can be carried over to context-free languages.\nSince every context-free language can be generated by many context-free\ngrammars, some of which may be ambiguous, while others may not be, there\nare *potentially* three classes of context-free languages:\n\n1.  those that can only be generated by unambiguous grammars,\n\n2.  those that can be generated by ambiguous, as well as unambiguous\n    grammars,\n\n3.  those that can only be generated by ambiguous grammars.\n\nHowever, the first class is an empty set: every context-free language\ncan be generated by an ambiguous grammar. Suppose $G$ is a context-free\ngrammar generating the language $L$. If $G$ contains the production\n$\\sigma\\to \\sigma$, then $G$ is ambiguous, for any leftmost derivation\n$\\sigma \\stackrel{*}{\\to} w$ of a word $w$ can be lengthened to a\nleftmost derivation $\\sigma \\to \\sigma \\stackrel{*}{\\to} w$. If $G$ does\nnot contain $\\sigma\\to \\sigma$, the grammar $G'$ obtained by adding the\nproduction $\\sigma \\to \\sigma$ to $G$ generates $L$ as well, and is\nambiguous as we have just shown.\n\nThe other two classes are formally defined as follows:\n\n**Definition**. A context-free language is *unambiguous* if it can be\ngenerated by an unambiguous grammar. Otherwise, it is said to be\n*inherently ambiguous*.\n\nIt can be shown that any regular language is unambiguous, and so is any\ndeterministic context-free language (a language generated by a\ndeterministic pushdown automaton). In addition, the intersection as well\nas the difference of a unambiguous context-free language with a regular\nlangauge is unambiguous and context-free.\n\nNevertheless, inherently ambiguous languages do exist. Several explicit\nexamples can be found in Ginsburg, one of which is the union of two\ncontext-free languages $\\lbrace a^ib^ic^j\\mid i,j\\ge 1\\rbrace$ and\n$\\lbrace a^ib^jc^j\\mid i,j\\ge 1\\rbrace$.\n\n**Remark**. It is undecidable whether a context-free language over at\nleast two symbols is inherently ambiguous.\n\n[9]{} S. Ginsburg, [*The Mathematical Theory of Context-Free\nLanguages*]{}, McGraw-Hill, New York (1966). D. C. Kozen, [*Automata and\nComputability*]{}, Springer, New York (1997).",
  "language": "INFORMAL",
  "phrase": "Ambiguous Grammar",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/AmbiguousGrammar"
    }
  ],
  "indexable": true
}