{
  "alternatePhrases": [
    "Szilard language"
  ],
  "definition": "### Background {#background .unnumbered}\n\nLet $G=(\\Sigma,N,P,\\sigma)$ be a formal grammar. A pair $(W_1,W_2)$ of\nwords over $\\Sigma$ is said to correspond to the production $p\\to q$ if\n$$W_1= u_1 p v_1\\qquad\\mbox{and}\\qquad W_2=u_2 q v_2$$ for some words\n$u_i,v_j$ over $\\Sigma$. We also say that $(W_1,W_2)$ is a derivation\nstep, and write $W_1\\to W_2$.\n\nRecall that a derivation in $G$ is a finite sequence of words\n$$W_1,W_2, \\ldots, W_n$$ over $\\Sigma$ such that\n$W_i \\Rightarrow W_{i+1}$, for $i=1,\\ldots,n-1$. The derivation is also\nwritten $$W_1\\Rightarrow W_2 \\Rightarrow \\cdots \\Rightarrow W_n.$$ The\nderivation above has $n-1$ steps. Zero-step derivations are also\npermitted. These are just words over $\\Sigma$.\n\nThe reflexive transitive closure of $\\Rightarrow$ is $\\Rightarrow^*$.\nThus, $V\\Rightarrow^*W$ means that there is a derivation starting with\n$V$ and ending with $W$. There may be more than one derivation from $V$\nto $W$.\n\nIf we consider each production as a \u201cletter\u201d in the alphabet $P$, then\nthe above derivation can be represented by a \u201cword\u201d over $P$ in the\nfollowing manner: the \u201cword\u201d is formed by taking concatenations of the\n\u201cletters\u201d, where concatenations correspond to successive applications of\nproductions in $P$:\n$$[p_1\\to q_1][p_2\\to q_2]\\cdots [p_{n-1}\\to q_{n-1}].$$ Derivation\nlanguage is thus a certain collection of derivation words, formally\ndefined below.\n\n### Definitions {#definitions .unnumbered}\n\nTreating productions as \u201cletters\u201d is really nothing more than labeling\neach production with some symbol. Formally, call a *labeling* of an\nalphabet $P$ a surjection $f: F\\to P$, where $F$ is some alphabet. For\nany $p\\in P$, a label for $p$ is an element $x\\in F$ such that $f(x)=p$.\nWe will only be interested in injective labeling (hence a bijection)\nfrom now on.\n\n**Definition**. Suppose we are given a labeling $f$ of the set $P$ of\nproductions in the grammar $G$. Given a derivation\n$D:W_1 \\Rightarrow W_2 \\Rightarrow \\ldots \\Rightarrow W_n$, a\n*derivation word* $U$ for $D$ is defined inductively as follows:\n\n1.  if $n=1$, then the empty word $U:=\\lambda$,\n\n2.  if $n=2$, then $U:=x\\in F$ is a label for a production that\n    $W_1 \\Rightarrow W_2$ corresponds to,\n\n3.  if $n>2$, then $U:=U_1U_2$, where\n\n    -   $U_1$ is a derivation word for the derivation\n        $W_1 \\Rightarrow \\cdots \\Rightarrow W_i$,\n\n    -   $U_2$ is a derivation word for the derivation\n        $W_i \\Rightarrow \\cdots \\Rightarrow W_n$.\n\nIf $U$ is a derivation word for derivation $D$, let us abbreviate this\nby writing $f[U]=D$. Note that we are not applying the labeling $f$ to\n$U$, it is merely a notational convenience.\n\nA derivation word is sometimes called a *control word*, for it defines\nor controls whether and how a word may be derived from another word.\nNote that any $W_1\\Rightarrow^* W_2$ may correspond to several distinct\nderivations, and hence several distinct derivation words. Also, the same\nderivation word may correspond to distinct derivations.\n\nFor example, let $G$ be a grammar over two symbols $($ and $)$ with\nproductions $\\sigma \\to \\lambda$, $\\sigma \\to (\\sigma)$, and\n$\\sigma \\to \\sigma \\sigma$ ($G$ generates the parenthesis language\n$\\boldsymbol{\\operatorname{Paren}_1}$) Label the productions as $a,b,c$\nrespectively. Then the derivation $\\sigma \\Rightarrow^* (()())$\ncorrespond to derivation words $bcbbaa$ and $bcbaba$. Notice that\n$\\sigma \\sigma \\Rightarrow (\\sigma) \\sigma$ and\n$\\sigma\\sigma \\Rightarrow \\sigma (\\sigma)$ both correspond to the\nderivation word $b$.\n\n**Definition**. The *derivation language* of a grammar\n$G=(\\Sigma,N,P,\\sigma)$ is the set of all derivation words for\nderivations on words generated by $G$. In other words, consider the\nlabeling $f:F\\to P$. The derivation language of $G$ is the set\n$$\\lbrace U\\in F^* \\mid f[U] \\mbox{ is a derivation of the form }\\sigma \\Rightarrow^* u \\mbox{ for some }u \\in N^*\\rbrace.$$\nThe derivation language of $G$ is also called the *Szilard language* of\n$G$, named after its inventor, and is denoted by $\\operatorname{Sz}(G)$.\n\nFor example, let $G$ be the grammar over a the letter $a$, with\nproductions given by $\\sigma\\to \\sigma$, $\\sigma \\to a$. If the\nproductions are labeled $b,c$, then\n$\\operatorname{Sz}(G)=\\lbrace b^n c \\mid n\\ge 0\\rbrace$. Note that\n$L(G)=\\lbrace a\\rbrace$. Likewise, if $G'$ is the grammar over $a$, with\nproductions $\\sigma\\to A \\sigma$, $A\\to \\lambda$, and $\\sigma\\to a$,\nlabeled $p,q,r$ respectively, then $L(G')=\\lbrace a\\rbrace$. However,\n$\\operatorname{Sz}(G')$ is quite different from $\\operatorname{Sz}(G)$:\n$$\\begin{aligned}\n\\operatorname{Sz}(G')&=\\lbrace u\\in F^*  \\mid& u=vrw\\mbox{, where }v\\in \\lbrace p,q\\rbrace^*, w\\in \\lbrace q\\rbrace^*, \\\\\n&& \\#_u(p)=\\#_u(q)\\mbox{ and }\\#_x(p)\\ge \\#_x(q)\\mbox{ for all }x\\le u\\rbrace\\end{aligned}$$\nwhere\n\n-   $F=\\lbrace p,q,r\\rbrace$,\n\n-   $\\#_u(r)$ means the number of occurrences of $r$ in word $u$,\n\n-   $v\\le u$ means that $v$ is a prefix of $u$.\n\n**Remarks**. Let $G$ be a formal grammar.\n\n-   Some properties of $\\operatorname{Sz}(G)$:\n\n    1.  $\\operatorname{Sz}(G)$ is always context-sensitive.\n\n    2.  If $G$ is regular, so is $\\operatorname{Sz}(G)$.\n\n    3.  if $G$ is context-free, $\\operatorname{Sz}(G)$ may not be; in\n        fact, for any context-free language $L$, there is a context-free\n        grammar $G$ such that $L=L(G)$ but $\\operatorname{Sz}(G)$ is not\n        context-free.\n\n    4.  There exists a context-free language $L$ such that\n        $\\operatorname{Sz}(G)$ is not context-free for any grammar $G$\n        generating $L$.\n\n-   However, if one considers the subset $\\operatorname{Sz}_L(G)$ of\n    $\\operatorname{Sz}(G)$ consisting of all derivation words\n    corresponding to leftmost derivations, then $\\operatorname{Sz}_L(G)$\n    is context-free.\n\n-   It is an open question that, given any (context-sensitive) language\n    $L$, whether there is a grammar $G$ such that\n    $L=\\operatorname{Sz}(G)$.\n\n[9]{} A. Salomaa, [*Formal Languages*]{}, Academic Press, New York\n(1973). G. E. R\u00e9v\u00e9sz, [*Introduction to Formal Languages*]{}, Dover\nPublications (1991).",
  "language": "INFORMAL",
  "phrase": "Derivation Language",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/DerivationLanguage"
    }
  ],
  "indexable": true
}