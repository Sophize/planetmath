{
  "alternatePhrases": [
    "well-nested",
    "fully balanced",
    "parenthesis language"
  ],
  "definition": "The importance of using parentheses can be illustrated by looking at the\nfollowing expression: $$((2-1)\\cdot (-(1+2))\\cdot 4)\\div((1+2)\\cdot 2)$$\nThere is no ambiguity in computing the result, which is $-2$. If we\nremove all the parentheses in the expression, we get\n$$2-1\\cdot -1+2 \\cdot 4\\div 1+2 \\cdot 2$$ which does not make much\nsense, unless we know the order of arithmetic operations in advance. In\naddition, without using parentheses, the result will differ depending on\nhow the order of operations is assigned.\n\nNow, if we remove all the symbols in the first expression above except\nthe parentheses, we get $$(()(()))(())$$ an expression known as a word\nof \u201cwell-balanced\u201d parentheses.\n\nFormally, let $\\Sigma_1 = \\lbrace (, ) \\rbrace$ be an alphabet\nconsisting of the left and right parentheses. Given word $u$ over\n$\\Sigma_1$, let $D_1(u)$ be the number of occurrences of the left\nparentheses in $u$ minus the number of occurrences of the right\nparentheses in $u$.\n\n**Definition**. A word $u$ over $\\Sigma_1$ is said to be a word of\n*well-balanced* parentheses, if\n\n1.  $D_1(u)=0$, and\n\n2.  $D_1(v)\\ge 0$ for any prefix $v$ of $u$.\n\nFor simplicity, we also say that $u$ is a well-balanced word over\n$\\Sigma_1$.\n\nGiven this definition, the word above is well-balanced, but $()(()))$\nand $)())(($ are not.\n\n**Definition**. The set of well-balanced words over $\\Sigma_1$ is called\nthe *parenthesis language* or *Dyck language* over $\\Sigma_1$, and is\ndenoted by $\\boldsymbol{\\operatorname{Paren}_1}$.\n\nThe $1$ in $\\Sigma_1$ denotes that only one type of parentheses is used\nin the language.\n\nBy induction, it is not hard to see that\n$\\boldsymbol{\\operatorname{Paren}_1}$ can be generated by the following\ngrammar:\n\n1.  terminal set is $\\Sigma_1$,\n\n2.  non-terminal set is the singleton consisting of the start symbol\n    $\\sigma$,\n\n3.  productions are $\\sigma \\to \\lambda$ (the empty word),\n    $\\sigma \\to \\sigma\\sigma$, and $\\sigma \\to ( \\sigma )$.\n\nAs a result, $\\boldsymbol{\\operatorname{Paren}_1}$ is context-free.\nFurthermore, $\\boldsymbol{\\operatorname{Paren}_1}$ is a deterministic\nlanguage, and hence unambiguous.\n\nMore generally, one can consider expressions involving more than one\ntype of parentheses, such as \\[\\], $\\lbrace \\rbrace$, and\n$\\langle \\rangle$.\n\n**Definition**. Let\n$\\Sigma_n = \\lbrace (_1, )_1, \\ldots, (_n, )_n \\rbrace$ be an alphabet\nconsisting of $n$ types of parentheses, a left and a right one for each\ntype. The *Dyck language* over $\\Sigma_n$, written\n$\\boldsymbol{\\operatorname{Paren}_n}$, is the language generated by the\nfollowing grammar:\n\n1.  terminal set is $\\Sigma_n$,\n\n2.  non-terminal set is the singleton consisting of the start symbol\n    $\\sigma$,\n\n3.  productions are $\\sigma \\to \\lambda$ (the empty word),\n    $\\sigma \\to \\sigma\\sigma$, and $\\sigma \\to (_i \\sigma )_i$ for each\n    $i$ in $\\lbrace 1,\\ldots, n\\rbrace$.\n\nAs before, $\\boldsymbol{\\operatorname{Paren}_n}$ is context-free, and\ndeterministic in particular, and hence unambiguous.\n\nWords in $\\boldsymbol{\\operatorname{Paren}_n}$ are also called\n*well-balanced*. However, it is a little more complicated to\ncharacterize what a well-balanced word is. The two criteria above for\nthe case $n=1$, while necessary, are not sufficient enough to describe\nthe \u201cwell-nestedness\u201d of parentheses when $n>1$. For example, if $n=2$,\nand the parentheses considered are $\\lbrace \\rbrace$ and $[]$, then the\nword $[\\lbrace ]\\rbrace$ satisfy both criteria above, but fail to be\nwell-nested.\n\nIn order to fully characterize a well-balanced word over $\\Sigma_n$, we\nfirst define, for each $i=1,\\ldots, n$, the function $D_i$ much the same\nway as $D_1$: so that $D_i(u)$ is the number of left parentheses $(_i$,\nminus the number of right parentheses $)_i$. Call a word $u$ partially\nbalanced if, for every $i=1,\\ldots, n$:\n\n1.  $D_i(u)=0$, and\n\n2.  $D_i(v)\\ge 0$ for every prefix $v$ of $u$.\n\nNext, write $u=u_1 \\cdots u_m$, where each $u_k$ is a symbol in\n$\\Sigma_n$. Let $u(j)$ be the prefix $u_1 \\cdots u_j$. Given a position\n$j$ in $u$, if $u_j$ is a left parenthesis, say $(_i$, then there is a\ncorresponding right parenthesis $)_i$ in $u$ to the right of $u_j$,\npositioned at, say $k$, satisfying the equation $D_i(u(j))=D_i(u(k))+1$.\nThis is a straightforward result of the two criteria above. Let $j^+$ be\nthe least such position such that the equation holds. Now, if $u_j$ is\nright parenthesis, then for some position $k<j$, we have $k^+=j$. This\nmeans that, given any position $j$ in $u$, there is a unique pair of\npositions $(j_0,j_1)$, such that\n\n-   either $j=j_0$ or $j=j_1$, and\n\n-   $j_0^+ = j_1$.\n\nDefine, for each $j$, the word $u[j]$ to be the subword of $u$ with\nstarting position $j_0$ and ending position $j_1$. Now, we are ready to\nstate the last criterion in order that $u$ be well-balanced:\n\n1.  for each position $j$ in $u$, the word $u[j]$ is partially balanced.\n\nIt can be shown, the set of words satisfying all three criteria above is\n$\\boldsymbol{\\operatorname{Paren}_n}$. Furthermore, if $n=1$, the third\ncriterion can be derived from the first two criteria.\n\nOther than being deterministic, some basic properties of\n$\\boldsymbol{\\operatorname{Paren}_n}$:\n\n-   $\\boldsymbol{\\operatorname{Paren}_m} \\subseteq \\boldsymbol{\\operatorname{Paren}_n}$,\n    for any $m\\le n$.\n\n-   $\\boldsymbol{\\operatorname{Paren}_n}$ is monoidal (it is a monoid):\n    $\\lambda \\in \\boldsymbol{\\operatorname{Paren}_n}$, and if\n    $u,v\\in \\boldsymbol{\\operatorname{Paren}_n}$, then\n    $uv\\in \\boldsymbol{\\operatorname{Paren}_n}$.\n\n-   More generally, $\\boldsymbol{\\operatorname{Paren}_n}$ is insertion\n    closed: if $u, vw \\in \\boldsymbol{\\operatorname{Paren}_n}$, then\n    $vuw \\in \\boldsymbol{\\operatorname{Paren}_n}$.\n\n-   $\\boldsymbol{\\operatorname{Paren}_n}$ is also deletion closed: if\n    $u_1vu_2, v \\in \\boldsymbol{\\operatorname{Paren}_n}$, then\n    $u_1u_2 \\in \\boldsymbol{\\operatorname{Paren}_n}$.\n\n-   $\\boldsymbol{\\operatorname{Paren}_n}$ is not prefix-free.\n\n-   Suppose $f:\\Sigma_n \\to \\Sigma_m^*$ is a function, such that for\n    each $i=1,\\ldots, n$, $f$ maps $(_i$ and $)_i$ to some $u_i$ and\n    $v_i$ respectively such that\n    $u_iv_i \\in \\boldsymbol{\\operatorname{Paren}_m}$. Then the extension\n    $f^*: \\Sigma_n^* \\to \\Sigma_m^*$, when restricted to\n    $\\boldsymbol{\\operatorname{Paren}_n}$, is a language homomorphism\n    from $\\boldsymbol{\\operatorname{Paren}_n}$ to\n    $\\boldsymbol{\\operatorname{Paren}_m}$.\n\n**Remark**. It can be shown that the number of words of length $2n$ in\n$\\boldsymbol{\\operatorname{Paren}_1}$ is the $n$-th Catalan number. For\na proof of this, see . The idea is to visualize a word in\n$\\boldsymbol{\\operatorname{Paren}_1}$ as a path in a two-dimensional\nlattice, which can be generated as follows: given a word $u$ of length\n$2n$, the path $p(u)$ starts from $(0,0)$ (which corresponds to the\nfirst symbol of $u$). If point $(i,j)$ is on the path, then the next\npoint on the path is $(i+1,k)$, where $k=j+1$ if the $i$-th symbol of\n$u$ is $($, otherwise $k=j-1$. So the increase from one point to the\nnext is either $(1,1)$, or $(1,-1)$. As a result, the path $P(u)$ has\nthe property that it never dips below the $x$-axis, and it ends at\n$(2n,0)$. Paths defined this way are also known as *Dyck paths*.\n\n[9]{} D. C. Kozen, [*Automata and Computability*]{}, Springer, New York\n(1997). J.E. Hopcroft, J.D. Ullman, [*Formal Languages and Their\nRelation to Automata*]{}, Addison-Wesley, (1969).",
  "language": "INFORMAL",
  "phrase": "Dyck Language",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/DyckLanguage"
    }
  ],
  "indexable": true
}