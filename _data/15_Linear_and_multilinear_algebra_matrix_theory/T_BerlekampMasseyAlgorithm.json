{
  "alternatePhrases": [],
  "definition": "The Berlekamp-Massey algorithm is used for finding the minimal\npolynomial of a linearly recurrent sequence. The algorithm itself is\npresented at the end of this article.\n\nSuppose the infinite sequence $a$ with elements from a field $K$ has the\nproperty that there exist constants $c_1, \\ldots, c_k$ in $K$ such that,\nfor all $t > k$, $$a_t = a_{t-1}c_1 + a_{t-2}c_2 + ... + a_{t-k}c_k.$$\nThen $a$ is called a [**linearly recurrent sequence**]{}.\n\nGiven a linearly recurrent sequence $a$, suppose $c_0 \\ldots c_k \\in K$\nwith $c_0 \\neq 0$ satisfy, for all $t>k, $\n$$c_0a_t = a_{t-1}c_1 + a_{t-2}c_2 + ... + a_{t-k}c_k.$$ Then the\npolynomial $$c_0x^k - c_1x^{k-1} - c_2x^{k-2} - ... - c_k$$ is called an\n**annihilator** for $a$.\n\nThe annihilators of $a$ form an ideal of $K[x]$.\n\nSince $K[x]$ is a principal ideal domain, the ideal of $a$\u2019s\nannihilators have a unique monic generator of minimal degree. This\nannihilator is called the [**minimal polynomial**]{} of $a$.\n\nTo find the minimal polynomial, we need to be given an upper bound $m$\non its degree; having done so, the minimal polynomial is uniquely\ndetermined by the first $2m$ elements of $a$ (since we need to get $m$\nequations to solve for the unknowns $c_1, \\ldots c_m$).\n\nThere is another way to determine the minimal polynomial, originally\npresented by Dornstetter, which uses the Euclidean Algorithm. It can be\nshown that the characteristic polynomial of a sequence is the unique\nmonic polynomial $C(x)$ of least degree for which the infinite product\n$$C(x)(a_1 + a_2x + a_3x^2 + ...)$$ has finitely many nonzero terms. (In\nfact, the nonzero terms will have coefficients up to $x^{k-1}$ where $k$\nis the degree of $C$).\n\nWe can rewrite this as\n$$C(x)\\cdot(a_1 + a_2x + ... + a_{2m}x^{2m-1}) - Q(x)\\cdot x^{2m} = R(x)$$\n\nwhere $R(x)$ is a remainder polynomial of degree &lt; $m$, and $Q(x)$ is\na quotient polynomial. Denote by $A(x)$ the sum\n$\\Sigma_{i=1}^{2m}a_ix^{i-1}$.\n\nThis is where the Euclidean Algorithm comes in; if we take the GCD of\n$A(x)$ and $x^{2m}$, keeping track of remainders, we get two sequences\n$P_i(x), Q_i(x)$ such that $$P_i(x)\\cdot A(x) - Q_i(x)\\cdot x^{2m}$$\nforms a series of polynomials whose degree is decreasing; as soon as\nthis degree is less than $m$, we have the needed polynomials with\n$C=P_i, Q=Q_i$.\n\nThere is more info about the Extended Euclidean Algorithm in \u201cModern\nComputer Algebra\u201d by von zur Gathen and Gerhard.\n\n(Berlekamp\u2019s algorithm proper to come)\n\nThe original algorithm is from *Algebraic Coding Theory* by Elwyn R.\nBerlekamp, McGraw-Hill, 1968. Its application to linearly recurrent\nsequences was noted by J.L.Massey, in \u201cShift-register synthesis and BCH\ndecoding\u201d, 1969.",
  "language": "INFORMAL",
  "phrase": "Berlekamp-Massey Algorithm",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/BerlekampMasseyAlgorithm"
    }
  ],
  "indexable": true
}