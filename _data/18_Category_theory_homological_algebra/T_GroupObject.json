{
  "alternatePhrases": [],
  "definition": "A group object is a formalization of the concept of a group with\nadditional structure, such as a topological group, a Lie group, or a\ngroup variety.\n\nLet $C$ be a category with a terminal object $E$.\n\nA *group object* in $C$ is an object $G$ of $C$ for which the products\n$G\\times G$ and $G\\times G\\times G$ exist, along with $C$ morphisms\n$$m:G\\times G \\to G,$$ $$i:G\\to G$$ and $$e:E\\to G.$$ These morphisms\nmust make the following diagrams commute:\n\nAssociativity\n\n:   $$\\xymatrix{\n    (G\\times G) \\times G \\ar@{=}[r] \\ar[d]_{m\\times\\operatorname{id}} & G\\times G\\times G & G\\times (G\\times G) \\ar@{=}[l] \\ar[d]^{\\operatorname{id}\\times m}\\\\\n    G\\times G\\ar[dr]^m & & G\\times G\\ar[dl]_m \\\\\n     & G & \n    }$$\n\nIdentity\n\n:   $$\\xymatrix{\n    G\\ar[ddr]_\\operatorname{id}\\ar[dr] & & G\\ar[dl] & E \\ar[l]^e\\ar[ddll]^e\\\\\n     & G\\times G \\ar[d]^m & & \\\\\n     & G & &\n    }$$ and $$\\xymatrix{\n    E \\ar[r]^e\\ar[ddrr]^e & G\\ar[dr] & & G\\ar[dl]\\ar[ddl]^\\operatorname{id}\\\\\n    & & G\\times G \\ar[d]^m & \\\\\n    & & G &\n    }$$\n\nInverse\n\n:   $$\\xymatrix{\n    G \\ar[r]^{(\\operatorname{id},i)}\\ar[dr] & G\\times G \\ar[r]^m & G\\\\\n     & E\\ar[ur]^{e} & \n    }$$ and $$\\xymatrix{\n    G \\ar[r]^{(i,\\operatorname{id})}\\ar[dr] & G\\times G \\ar[r]^m & G\\\\\n     & E\\ar[ur]^{e} & \n    }$$\n\nThis definition may look unfamiliar if you are not comfortable with\ncategory theory, but it becomes much clearer if $G$ has elements. (In\nwhich case, $E$ can be taken to be a set with a single element, which we\nshall denote as \u201c$*$\u201d.) Then the commutativity of the first diagram\n(\u201cAssociativity\u201d) is exactly the condition\n$$m(m(g_1,g_2),g_3)=m(g_1,m(g_2,g_3)),$$ that is, $m$ is associative.\nSimilarly, the second and third diagrams (\u201cIdentity\u201d) commute if and\nonly if $$m(g,e(*))=g \\text{ and } m(e(*),g)=g$$ so that $e(*)$ is an\nidentity element. The fourth and fifth (\u201cInverse\u201d) commute if and only\nif $$m(g,i(g))=e(*)\\text{ and }m(g,i(g))=e(*)$$ so that $i(g)$ is an\ninverse of $g$.\n\nThus if $C$ is a category of sets with some extra structure, then\n$G\\in C$ is a group object if and only if the group operations respect\nthe structure (that is, are morphisms of $C$).\n\nIf $C$ is a suitable category of objects that already have a group\nstructure, (such as a ring, a field, or a vector space) then every\nobject in $C$ is a group object in a natural way, that is, using the\nassociated operations.\n\nA homomorphism of group objects is defined in the obvious way:\n\nA *homomorphism of group objects* $\\phi:G\\to H$ is a morphism $G\\to H$\nthat commutes with the group operations. Specifically,\n$\\phi\\circ e_G = e_H$, $\\phi\\circ i_G = i_H \\circ\\phi$, and the diagram\n$$\\xymatrix{\nG\\times G \\ar[d]_{m_G}\\ar[r]^{(\\phi,\\phi)} & H\\times H \\ar[d]^{m_H} \\\\\nG \\ar[r]^\\phi & H\n}$$ must commute.\n\nOnce again, this definition looks much worse than it is; if $G$ has\npoints, this is exactly the familiar definition of a group homomorphism,\nwith the additional condition that $\\phi$ must be a morphism in $C$.\n\nThis definition, with its many diagrams, may seem unnecessarily\ncomplicated since it just reduces to a group with an additional\ncondition. However, in some categories, the objects do not have points;\nin others, the points do not tell the same story (there may be several\nmorphisms with the same effect on points). In these categories, the full\ndefinition is needed. One such category is the category of schemes; a\ngroup scheme does not have meaningful points in the usual sense.\n\nFinally, it is worth noting that, by Yoneda\u2019s lemma, we can view group\nobjects as functors into the category of groups. This allows one to use\nresults from category theory to give information about group objects.",
  "language": "INFORMAL",
  "phrase": "Group Object",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/GroupObject"
    }
  ],
  "indexable": true
}