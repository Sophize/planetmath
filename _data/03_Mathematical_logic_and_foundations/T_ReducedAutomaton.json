{
  "alternatePhrases": [
    "minimal automaton"
  ],
  "definition": "Besides eliminating useless states that do not contribute to word\nacceptance, what else can we do to \u201cclean up\u201d an automaton? In other\nwords, we would like to reduce the number of states in an automaton to\nas small as possible without affecting its power of accepting words.\n\nThe next thing we can do is to look to find states that do the same\nthing and combine them into one state. Two states do the same thing if,\nacting as starting states, when an arbitrary word is fed into the\nautomaton, they lead to the same conclusion: either both accept the\nword, or both reject it. Arbitrary automata are too general to ensure\ndefinite conclusions, so we restrict our attention to deterministic\nfinite automata.\n\n**Definition**. Let $A=(S,\\Sigma,\\delta,q_0,F)$ be an automaton with a\nsingle start state $q_0$. For any state $s\\in S$, define $A_s$ to be the\nautomaton obtained from $A$ by replacing $q_0$ by $s$. In other words,\n$A_s:=(S,\\Sigma,\\delta,s,F)$. Two states $s,t\\in S$ are said to be\n*indistinguishable* if $L(A_s)=L(A_t)$.\n\nLet us write $s\\approx t$ to mean that $s$ and $t$ are\nindistinguishable. Then $\\approx$ is an equivalence relation on $S$. For\neach $s\\in S$, write $[s]$ the equivalence class containing $s$. Let\n$S/\\approx$ be the set of equivalence classes.\n\nIf $A$ is a DFA, $s \\approx t$ is the same as saying that, for all words\n$u$ over $\\Sigma$, $\\delta(s,u)\\in F$ iff $\\delta(t,u)\\in F$. For the\nfollowing discussion, we shall assume that $A$ is a DFA, unless\notherwise specified.\n\nHere are two basic observations:\n\n1.  if $[s]=[t]$, then $[\\delta(s,a)]=[\\delta(t,a)]$: Let\n    $p=\\delta(s,a)$ and $q=\\delta(t,a)$. Given any $u$ over $\\Sigma$, we\n    have that $\\delta(p,u)=\\delta(\\delta(s,a),u)=\\delta(s,au)$, which is\n    in $F$ iff $\\delta(t,au)=\\delta(\\delta(t,a),u)=\\delta(q,u)$ is in\n    $F$. Hence $p\\approx q$.\n\n2.  if $[s]=[t]$ and $t\\in F$, then $s\\in F$: as\n    $\\delta(t,\\lambda)=t\\in F$ shows that $s=\\delta(s,\\lambda)\\in F$. As\n    a result of this, $p\\in F$ iff $[p]\\in F'$.\n\nDefine $A'=(S',\\Sigma,\\delta', q_0',F')$ as follows: $S':=S/\\approx$,\n$q_0':= [q_0]$, $F':=\\lbrace [t]\\mid t\\in F\\rbrace$, and\n$\\delta'([s],a):= [\\delta(s,a)]$, for any $a\\in \\Sigma$.\n\nNow, $\\delta'$ is a well-defined function from the first observation\nabove, so that $A'$ is a well-defined automaton. It has the following\nproperty: for any word $u$ over $\\Sigma$:\n$$\\delta'([s],u)=[\\delta(s,u)].$$ This can be proved by induction on the\nlength of $u$:\n\n-   $\\delta'([s],\\lambda)=[s]=[\\delta(s,\\lambda)]$\n\n-   suppose $\\delta'([s],u)=[\\delta(s,u)]$, then for any $a\\in \\Sigma$,\n    $$\\delta'([s],ua)=\\delta'(\\delta'([s],u),a) = \\delta'([\\delta(s,u)],a)= [\\delta(\\delta(s,u),a)] = [\\delta(s,ua)].$$\n\nIt also has the property that for if two states are indistinguishable,\nthey are in fact the same state: suppose $[s]\\approx [t]$, then for\nevery $u$ over $\\Sigma$, $\\delta'([s],u)\\in F'$ iff\n$\\delta'([t],u)\\in F'$, or $[\\delta(s,u)]\\in F'$ iff\n$[\\delta(t,u)]\\in F'$, which is the same as saying $\\delta(s,u)\\in F$\niff $\\delta(t,u)\\in F$, or $s \\approx t$, or $[s]=[t]$.\n\n**Definition**. An finite automaton with a single start state is said to\nbe *reduced* or *minimal* if $s\\approx t$ implies $s=t$, where $\\approx$\nis the indistinguishable relation on its state set.\n\nThus $A'$ constructed above is reduced.\n\nBelow are state diagrams of an automaton $A$ (not deterministic) and its\nreduction $A'$:\n\nNote that $p\\approx q$, as\n$L(A_p)=L(A_q)=\\lbrace aa, ab, ba, bb\\rbrace$, and are combined into one\nstate $x$. Similarly, $r\\approx s$, as\n$L(A_r)=L(A_s)=\\lbrace a,b\\rbrace$, and are combined into $y$. Finally,\nnote that $L(A)=L(A')=\\lbrace u\\mid |u|=3\\rbrace$.\n\nWith respect to DFA\u2019s, the following is true:\n\nEvery DFA $A$ is equivalent to a reduced DFA $A'$. Furthermore, if $A$\nis accessible (or simplified), so is $A'$. Finally, two equivalent\nreduced accessible automata are isomorphic.\n\nWe have already shown that given a DFA $A$, the automaton $A'$\nconstructed above is reduced. Next, we see that $u \\in L(A)$ iff\n$\\delta(q_0,u)\\in F$ iff $[\\delta(q_0,u)]\\in F'$ iff\n$\\delta'([q_0],u)\\in F'$ iff $u\\in L(A')$. Therefore, $L(A)=L(A')$.\n\nNext, suppose $A$ is accessible, we want to show that $[p]$ is\naccessible for any $p\\in S$. Since $p$ is accessible, $p=\\delta(q_0,u)$\nfor some word $u$ over $\\Sigma$. So\n$\\delta([q_0],u)=[\\delta(q_0,u)]=[p]$ is accessible as well. This proves\nthat $A'$ is accessible.\n\nSuppose now that $A$ is simplified. Pick any $s\\in S$, we want to show\nthat $[s]$ is useful. Since $s$ is useful, there are words $u,v$ over\n$\\Sigma$ such that $\\delta(q_0,u)=s$ and $\\delta(s,v)\\in F$, or\nequivalently $\\delta'([q_0],u)=[\\delta(q_0,u)]=[s]$ and\n$\\delta'([s],v)=[\\delta(s,v)]\\in F'$, so that $[s]\\in S'$ is useful.\nThis shows that $A'$ is simplified.\n\nFinally, if $A$ and $B$ are both accessible and reduced such that\n$L(A)=L(B)=R$. Then the Myhill-Nerode relations induced by $A$ and $B$\nare both equal to the Nerode equivalence $\\mathcal{N}_R$ of $R$. As a\nresult, $A$ and $B$ are both isomorphic to the automaton generated by\n$\\mathcal{N}_R$.\n\n**Remark**. The proposition above is not true in general for\nnon-deterministic finite automata: two equivalent simplified reduced\nNDFA may not be isomorphic. However, there exist reduction techniques\nfor NDFA such that the reduced automata produced using these techniques\nare unique up to isomorphism.",
  "language": "INFORMAL",
  "phrase": "Reduced Automaton",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/ReducedAutomaton"
    }
  ],
  "indexable": true
}