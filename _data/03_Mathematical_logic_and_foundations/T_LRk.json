{
  "alternatePhrases": [
    "$LR(k)$"
  ],
  "definition": "Given a word $u$ and a context-free grammar $G$, how do we determine if\n$u\\in L(G)$?\n\nOne way is to look for any subword $v$ of $u$ such that there is a\nproduction $A\\to v$. If this is successful, we may replace $v$ with $A$\nin $u$ to obtain a word $w$, so that $w \\Rightarrow u$. We may then\nrepeat the process on $w$ to obtain another word $x$ such that\n$x\\Rightarrow w$ (if successful). In the end, if everything works\nsuccessfully, we arrive at the starting non-terminal symbol $\\sigma$,\nand get a derivation $\\sigma\\Rightarrow^* u$ as a result, so that\n$u\\in L(G)$. This procedure is known as the bottom-up parsing of the\nword $u$.\n\nIn general, unless one is very lucky, successfully finding a derivation\n$\\sigma\\Rightarrow^* u$ requires many trials and errors, since at each\nstage, for a given word $u$, there may be several words $w$ such that\n$w\\Rightarrow u$.\n\nNevertheless, there is a particular family of context-free grammars,\ncalled the $LR(k)$ grammars, which make the bottom-up parsing described\nabove straightforward in the sense that, given a word $u$, once a word\n$w$ is found such that $w\\Rightarrow_R u$, any other word $w'$ such that\n$w'\\Rightarrow_R u$ forces $w'=w$. Here, $\\Rightarrow_R$ is known as the\nrightmost derivation (meaning that $u$ is obtained from $w$ by replacing\nthe rightmost non-terminal in $w$). The $L$ in $LR(k)$ means scanning\nthe symbols of $u$ from left to right, $R$ stands for finding a\nrightmost derivation for $u$, and $k$ means having the allowance to look\nat up to $k$ symbols ahead while scanning.\n\nThe details are as follows:\n\n**Definition**. Let $G=(\\Sigma,N,P,\\sigma)$ be a context-free grammar\nsuch that $\\sigma\\to \\sigma$ is not a production of $G$, and $k\\ge 0$ an\ninteger. Suppose $U$ is any sentential form over $\\Sigma$ with the\nfollowing setup: $U=U_1U_2U_3$ where\n\n-   $U_3$ is a terminal word,\n\n-   $X\\to U_2$ a production, and\n\n-   $\\sigma \\Rightarrow_R^* U_1XU_3 \\Rightarrow_R U$.\n\nLet $n=|U_1U_2|+k$, and $Z$ the prefix of $U$ of length $n$ (if $|U|<n$,\nthen set $Z=U$).\n\nThen $G$ is said to be $LR(k)$ if $W$ is another sentential form having\n$Z$ as a prefix, with the following setup: $W=W_1W_2W_3$, where\n\n-   $W_3$ is a terminal,\n\n-   $Y\\to W_2$ is a production, and\n\n-   $\\sigma \\Rightarrow_R^* W_1YW_3 \\Rightarrow_R W$,\n\nimplies that $$W_1=U_1,\\qquad Y=X, \\qquad \\mbox{and} \\qquad W_2=U_2.$$\n\nSimply put, if $D_U$ and $D_W$ are the rightmost derivations of $U$ and\n$W$ respectively, and if the prefix of $U$ obtained by including $k$\nsymbols beyond the last replacement in $D_U$ is also a prefix of $W$,\nthen the prefix of $U'$ obtained by including $k$ symbols beyond the\nlast replacement in $D_U$ is also a prefix of $W'$, where $U'$ and $W'$\nare words at the next to the last step in $D_U$ and $D_W$ respectively.\nIn particular, if $U=W$, then $U'=W'$. This implies that any derivable\nin an $LR(k)$ grammar has a unique rightmost derivation, hence\n\nAny $LR(k)$ grammar is unambiguous.\n\n**Examples**.\n\n-   Let $G$ be the grammar consisting of one non-terminal symbol\n    $\\sigma$ (which is also the final non-terminal symbol), two terminal\n    symbols $a,b$, with productions\n    $$\\sigma \\to a\\sigma b, \\qquad \\sigma\\to \\sigma b \\qquad \\mbox{and} \\qquad \\sigma \\to b.$$\n    Then $G$ is not $LR(k)$ for any $k\\ge 0$. For instance, look at the\n    following two derivations of $U=a^2\\sigma b^3$:\n    $$\\sigma \\Rightarrow^* a \\sigma b^2 \\Rightarrow a^2 \\sigma b^3\\qquad \\mbox{and}\\qquad \\sigma \\Rightarrow^* a^2 \\sigma b^2 \\Rightarrow a^2 \\sigma b^3$$\n    Here, $U_1=a$, $U_2=\\sigma b$. Let $k=1$. Then the criteria in the\n    definition are satisfied. Yet, $W_1=a^2\\ne U_1$. Therefore, $G$ is\n    not $LR(1)$.\n\n-   Note that the grammar $G$ above generates the language\n    $L=\\lbrace a^m b^n \\mid n > m\\rbrace$, which can also be generated\n    by the grammar with three non-terminal symbols $\\sigma, X,Y$, with\n    $\\sigma$ the final non-terminal symbol, where the productions are\n    given by\n    $$\\sigma \\to XY,\\quad X\\to aXb, \\quad X\\to \\lambda, \\quad Y\\to Yb, \\quad \\mbox{and} \\quad Y\\to b.$$\n    However, this grammar is $LR(1)$.\n\nDetermining whether a context-free grammar is $LR(k)$ is a non-trivial\nproblem. Nevertheless, an algorithm exists for determining, given a\ncontext-free grammar $G$ and a non-negative integer $k$, whether $G$ is\n$LR(k)$. On the other hand, without specifying $k$ in advance, no\nalgorithms exist that determine if $G$ is $LR(k)$ for *some* $k$.\n\n**Definition**. A language is said to be $LR(k)$ if it can be generated\nby an $LR(k)$ grammar.\n\nEvery $LR(k)$ language is deterministic context-free. Every\ndeterministic context-free language is $LR(1)$.\n\nHence, deterministic context-free languages are the same as $LR(1)$\nlanguages.\n\n[9]{} A. Salomaa, [*Formal Languages*]{}, Academic Press, New York\n(1973). J.E. Hopcroft, J.D. Ullman, [*Formal Languages and Their\nRelation to Automata*]{}, Addison-Wesley, (1969).",
  "language": "INFORMAL",
  "phrase": "Lr(K)",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/LRk"
    }
  ],
  "indexable": true
}