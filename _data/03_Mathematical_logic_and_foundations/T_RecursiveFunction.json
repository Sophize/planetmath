{
  "alternatePhrases": [
    "unbounded minimization"
  ],
  "definition": "Intuitively, a recursive function is a positive integer valued function\nof one or more positive integer arguments which may be computed by a\ndefinite algorithm.\n\nRecursive functions may be defined more rigorously as the smallest class\nof partial functions from $\\mathbb{Z}_+^n \\to \\mathbb{Z}_+$ satisfying\nthe following six criteria:\n\n1.  The constant function $c: \\mathbb{Z}_+ \\to \\mathbb{Z}_+$ defined by\n    $c(x) = 1$ for all $x \\in \\mathbb{Z}_+$ is a recursive function.\n\n2.  The addition function $+: \\mathbb{Z}_+^2 \\to \\mathbb{Z}_+$ and the\n    multiplication function $\\times: \\mathbb{Z}_+^2 \\to \\mathbb{Z}_+$\n    are recursive function.\n\n3.  The projection functions\n    $I^n_m \\colon \\mathbb{Z}_+^n \\to \\mathbb{Z}_+$ with $1 \\le m \\le n$\n    defined as $I^n_m (x_1, \\ldots, x_n) = x_m$ are recursive functions.\n\n4.  [*(Closure under composition)*]{} If\n    $f \\colon \\mathbb{Z}_+^n \\to \\mathbb{Z}_+$ is a recursive function\n    and $g_i \\colon \\mathbb{Z}_+^m \\to \\mathbb{Z}_+$ with\n    $i = 1, \\ldots n$ are recursive functions, then\n    $h \\colon \\mathbb{Z}_+^n \\to \\mathbb{Z}_+$, defined by\n    $h(x_1, \\ldots, x_n) = f(g_1(x_1, \\ldots, x_m), \\ldots, g_n(x_1, \\ldots, x_m))$\n    is a recursive function.\n\n5.  [*(Closure under primitive recursion)*]{} If\n    $f \\colon \\mathbb{Z}_+^n \\to \\mathbb{Z}_+$ and\n    $g \\colon \\mathbb{Z}_+^{n+2} \\to \\mathbb{Z}_+$ are recursive\n    function, then $h \\colon \\mathbb{Z}_+^{n+1} \\to \\mathbb{Z}_+$,\n    defined by the recursion\n    $$h(n+1,x_1,\\ldots,x_{k}) = g(h(n,x_1,\\ldots,x_k),n,x_1,\\ldots, x_k)$$\n    with the initial condition\n    $$h(0,x_1,\\ldots,x_k) = f(x_1,\\ldots,x_k)$$ is a recursive function.\n\n6.  [*(Closure under minimization)*]{} If\n    $f \\colon \\mathbb{Z}_+^{n+1} \\to \\mathbb{Z}_+$ is a recursive\n    function then $g \\colon \\mathbb{Z}_+^n \\to \\mathbb{Z}_+$ is a\n    recursive function, where\n\n    -   $g(x_1, \\ldots, x_n)$ is defined to be $y$, if there exists a\n        $y \\in \\mathbb{Z}_+$ such that\n\n        1.  $f(0, x_1, \\ldots, x_n), f(1, x_1, \\ldots, x_n), \\ldots, f(y, x_1, \\ldots, x_n)$\n            are all defined,\n\n        2.  $f(z, x_1, \\ldots, x_n) \\ne 0$ when $1 \\le z <y$, and\n\n        3.  $f(y, x_1, \\ldots, x_n) = 0$.\n\n    -   $g(x_1, \\ldots, x_n)$ is undefined otherwise.\n\nThe operation whereby $h$ was constructed from $f$ and $g$ in criterion\n5 is known as primitive recursion. The operation described in criterion\n6 is known as minimization. That is to say, for any given function\n$f\\colon \\mathbb{Z}_+^{n+1} \\to \\mathbb{Z}_+$, the partial function\n$g \\colon \\mathbb{Z}_+^n \\to \\mathbb{Z}_+$ constructed as in criterion 6\nis known as the minimization of $f$ and is denoted by $g = \\mu f$.\n\nThe smallest set of functions satisfying criteria 1-5, but not criterion\n6, is known as the set of primitive recursive functions. Therefore, the\nset $\\mathcal{R}$ of all recursive function is the closure of the set\n$\\mathcal{PR}$ of primitive recursive function with respect to\nminimization. It can be shown that $\\mathcal{R}$ is exactly the set of\nTuring-computable functions. In terms of programming languages, a\nfunction is recursive iff it can be computed by a program involving the\nDO WHILE loops (minimization).\n\nWith some work, it can be shown that the class of recursive functions\ncan be characterized by considerably weaker sets of criteria than those\ngiven above. See the entry \u201c\u201d for several such characterizations.",
  "language": "INFORMAL",
  "phrase": "Recursive Function",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/RecursiveFunction"
    }
  ],
  "indexable": true
}