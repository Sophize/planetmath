{
  "alternatePhrases": [],
  "definition": "A Boolean operation is any one of the three set-theoretic operations:\nunion, intersection, and complementation. Boolean operations on automata\nare operations defined on automata resembling those from set theory.\n\n### Union of Two Automata {#union-of-two-automata .unnumbered}\n\nIf $A_1=(S_1,\\Sigma,\\delta_1,I_1,F_1)$ and\n$A_2=(S_2,\\Sigma,\\delta_2,I_2,F_2)$. Let $S,I,F$ be the disjoint unions\nof $S_1$ and $S_2$, $I_1$ and $I_2$, $F_1$ and $F_2$ respectively. For\nany $(s,a)\\in S\\times \\Sigma$, define $\\delta$ to be\n\n$$\\delta(s,a):= \\left\\{\n\\begin{array}{ll}\n\\delta_1(s,a) & \\textrm{if }s\\in S_1, \\\\\n\\delta_2(s,a) & \\textrm{if }s\\in S_2.\n\\end{array}\n\\right.$$\n\nThe automaton $A=(S,\\Sigma,\\delta,I,F)$ is called the *union* of $A_1$\nand $A_2$, and is denoted by $A_1 \\cup A_2$. Intuitively, we take the\ndisjoint union of the state diagrams of $A_1$ and $A_2$, and let it be\nthe state diagram of $A$.\n\nIt is easy to see that $L(A_1\\cup A_2)=L(A_1)\\cup L(A_2)$, and that\n$A_1\\cup A_2$ is equivalent to $A_2\\cup A_1$.\n\nIf only one starting state is required, one can modify the definition of\n$A_1\\cup A_2$ by adding a new state $q$ and setting it as the new start\nstate, then adding an edge from $q$ to each of the states in $I$ with\nlabel $\\lambda$. The modified $A_1\\cup A_2$ is equivalent to the\noriginal $A_1\\cup A_2$. Furthermore, if $A_1$ and $A_2$ are DFA\u2019s, so is\n$A_1\\cup A_2$.\n\n### Complement of an Automaton {#complement-of-an-automaton .unnumbered}\n\nLet $A=(S,\\Sigma,\\delta,I,F)$ be an automaton. We define the complement\n$A'$ of $A$ as the quintuple $$(S,\\Sigma,\\delta,I,F')$$ where $F'=S-F$.\nIt is clear that $A'$ is a well-defined automaton. Additionally, $A$ is\nfinite iff $A'$ is, and $A$ is deterministic iff $A'$ is.\n\nVisually, the state diagram of $A'$ is a directed graph whose final\nnodes are exactly the non-final nodes of $A$.\n\nIt is obvious that $(A')'=A$ and that $A$ is a DFA iff $A'$ is.\n\nSuppose $A$ is a DFA. Then it is easy to see that a string\n$a\\in \\Sigma^*$ is accepted by $A'$ precisely when $a$ is rejected by\n$A$. If $L(A)$ denotes the language consisting of all words accepted by\n$A$. Then $$L(A')=L(A)',$$ where $L(A)'=\\Sigma^*-L(A)$, the complement\nof $L(A)$ in $\\Sigma^*$.\n\nHowever, because it is possible that for some $(s,a)$,\n$\\delta(s,a)=\\varnothing$, the language accepted by an arbitrary\nautomaton $A'$ is in general not $L(A)'$.\n\n### Intersection of Two Autamata {#intersection-of-two-autamata .unnumbered}\n\nOne may define $A_1\\cap A_2$ to be $(A_1'\\cup A_2')'$. However, defined\nthis way, $$L(A_1\\cap A_2)=L(A_1)\\cap L(A_2)$$ is in general not true.\n\nThe way to ensure that the equation above always holds is to define\n$A_1\\cap A_2$ via the product of $A_1$ and $A_2$. For more details, see\nthe entry on product of automata.\n\nIf both $A_1$ and $A_2$ are DFA\u2019s, then $A_1\\cap A_2$ is equivalent to\n$(A_1'\\cup A_2')'$.",
  "language": "INFORMAL",
  "phrase": "Boolean Operations On Automata",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/BooleanOperationsOnAutomata"
    }
  ],
  "indexable": true
}