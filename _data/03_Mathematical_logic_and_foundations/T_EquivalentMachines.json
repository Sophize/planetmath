{
  "alternatePhrases": [],
  "definition": "Let $M_1=(S_1,\\Sigma,\\Delta,\\sigma_1,\\lambda_1)$ and\n$M_2=(S_2,\\Sigma,\\Delta,\\sigma_2,\\lambda_2)$ be two Mealy machines.\n\n**Definition**. A state $s_1$ of $M_1$ is said to be *equivalent* to a\nstate $s_2$ of $M_2$ iff\n$$\\lambda_1(s_1,u)=\\lambda_2(s_2,u) \\mbox{  for all non-empty input words }u\\mbox{ over }\\Sigma.$$\nWe write $\\approx$ for the equivalence.\n\nIn the same way, $\\approx$ can be defined on two Moore machines.\nHowever, where as $u$ is restricted to be non-empty in the Mealy case,\ninput words in Moore case are arbitrary, that is: $s_1 \\approx s_2$ iff\n$$\\beta_1(s_1,u)=\\beta_2(s_2,u) \\mbox{  for all input words }u\\mbox{ over }\\Sigma.$$\nHere, $\\beta_i$ is the modifications of the original output function\n$\\lambda_i$.\n\nSuppose now that $M=M_1=M_2$. Then $\\approx$ is an equivalence relation\non the state alphabet $S$ of $M$. Given $M$, form a new machine\n$M'=(S',\\Sigma,\\Delta,\\sigma',\\lambda')$ such that\n\n1.  $S':=S/\\!\\! \\approx \\; = \\lbrace [s]\\mid s\\in S \\rbrace$ is the set\n    of equivalence classes of $\\approx$ on $S$,\n\n2.  $\\sigma'([s],a)=[\\sigma(s,a)]$,\n\n3.  $\\lambda'([s],a)=\\lambda(s,a)$.\n\nIt is easy to verify that $M'$ is indeed a well-defined machine.\nFurthermore, if $M$ is Moore, so is $M'$.\n\nCall a machine (Mealy or Moore) *reduced* if $s_1\\approx s_2$ implies\n$s_1=s_2$. Then the machine $M'$ constructed from $M$ above is a reduced\nmachine.\n\nSuppose $M_1$ and $M_2$ are both Mealy machines such that they have the\nsame input and output alphabets.\n\n**Definition**. $M_1$ is said to be *equivalent* to $M_2$ if every state\nof $M_1$ is equivalent to a state of $M_2$, and vice versa. When $M_1$\nis equivalent to $M_2$, we write $M_1\\approx M_2$.\n\nEquivalence between two Moore machines is similarly defined. It is clear\nthat $\\approx$ is an equivalence relation on the class of Mealy machines\n(or Moore machines) over the same input and output alphabets.\n\nIn addition, it is also possible to define \u201cequivalence\u201d between\nmachines of different types. However, in the literature, the word\n\u201csimilar\u201d is used instead of \u201cequivalent\u201d:\n\n**Definition**. Let $M_1$ be a Mealy machine and $M_2$ a Moore machine.\n$M_1$ is said to be *similar* to $M_2$ if every state $s_1$ of $M_1$,\nthere is a state $s_2$ of $M_2$ such that\n$$\\lambda(s_1,u)=\\beta(s_2,u) \\mbox{  for all non-empty input words }u\\mbox{ over }\\Sigma.$$\nThe definition of a Moore machine similar to a Mealy machine is\nanalogous. Note that in the definition of similarity, input words are\nrestricted to non-empty words only.\n\nTwo machines of different types are similar if one is similar to\nanother, and vice versa. We write $M_1 \\sim M_2$ if $M_1$ and $M_2$ are\nsimilar.\n\nThe concept of similarity may be broadened to machines of the same type.\nIn the Mealy case, similarity is the same as equivalence. In the Moore\ncase, the two notions are different. Equivalence is more restrictive in\nthat the empty word is required in the definition. Two Moore machines\nmay be similar without being equivalent. In fact, we have the following\nfacts:\n\nTwo Mealy machines similar to a Moore machine are equivalent. There\nexist two inequivalent Moore machines similar to a Mealy machine.",
  "language": "INFORMAL",
  "phrase": "Equivalent Machines",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/EquivalentMachines"
    }
  ],
  "indexable": true
}