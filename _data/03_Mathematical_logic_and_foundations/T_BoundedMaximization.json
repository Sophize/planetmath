{
  "alternatePhrases": [],
  "definition": "The proof involved in showing that functions obtained via primitive\nrecursive functions are themselves primitive recursive can be used to\nshow the primitive recursiveness of another family of functions derived\nfrom existing primitive recursive functions via a similar technique,\ncalled *bounded maximization*.\n\n**Definition**. Let $f:\\mathbb{N}^{m+1} \\to \\mathbb{N}$ be a function.\nFor each $y\\in \\mathbb{N}$, set\n$$A_f(\\boldsymbol{x},y):=\\lbrace z\\in \\mathbb{N}\\mid z \\le y \\mbox{ and }f(\\boldsymbol{x},z)=0\\rbrace.$$\nDefine $$f_{bmax}(\\boldsymbol{x},y):= \\left\\{\n\\begin{array}{ll}\n\\max A_f(\\boldsymbol{x},y) & \\textrm{if } A_f(\\boldsymbol{x},y) \\ne \\varnothing, \\\\\n0 & \\textrm{otherwise.}\n\\end{array}\n\\right.$$ $f_{bmax}$ is called the function obtained from $f$ by\n*bounded maximization*.\n\nIf $f:\\mathbb{N}^{m+1} \\to \\mathbb{N}$ is primitive recursive, so is\n$f_{bmax}$.\n\nThe proof of this is very similar to the proof that $f_{bmin}$ is\nprimitive recursive in the parent entry. The initial set up is the same:\ndefine $g:=\\operatorname{sgn}\\circ f$, where $\\operatorname{sgn}$ is the\nsign function. So $g$ is primitive recursive.\n\nNext, define $h:\\mathbb{N}^{m+2} \\to \\mathbb{N}$ by\n$h(\\boldsymbol{x},y,z)=g(\\boldsymbol{x},y\\dot{-}z)$. So $h$, and\ntherefore its bounded product:\n$$h_p(\\boldsymbol{x},y,z):=\\prod_{i=0}^z h(\\boldsymbol{x},y,i)$$ are\nprimitive recursive. $h_p$ has the following property: given $y$,\n\n-   if $k$ is the largest number less than or equal to $y$ such that\n    $f(\\boldsymbol{x},k)=0$, then $$h_p(\\boldsymbol{x},y,z):= \\left\\{\n    \\begin{array}{ll}\n    1 & \\textrm{if } z < y - k, \\\\\n    0 & \\textrm{otherwise.}\n    \\end{array}\n    \\right.$$\n\n-   if no such $k$ exists, then $h_p(\\boldsymbol{x},y,z)=1$, for all\n    $(\\boldsymbol{x},y,z)\\in \\mathbb{N}^{m+2}$.\n\nAs a result, the bounded sum\n$$(h_p)_s(\\boldsymbol{x},y,z):=\\sum_{i=0}^z h_p(\\boldsymbol{x},y,i),$$\nand in particular, the function\n$g^*(\\boldsymbol{x},y):=(h_p)_s(\\boldsymbol{x},y,y)$, are primitive\nrecursive. After some simplification, $g^*$ becomes\n$$g^*(\\boldsymbol{x},y):= \\left\\{\n\\begin{array}{ll}\ny-k & \\textrm{if } k = \\max A_f(\\boldsymbol{x},y) \\mbox{ exists}, \\\\\ns(y) & \\textrm{otherwise.}\n\\end{array}\n\\right.$$ Finally, the function\n$g^{**}(\\boldsymbol{x},y):=y\\dot{-} g^*(\\boldsymbol{x},y)$, which is\njust $f_{bmax}(\\boldsymbol{x},y)$, is primitive recursive too.\n\n**Example**. Using bounded maximization, we can show that $q(x,y)$, the\nquotient of $x\\div y$, is primitive recursive. When $y=0$, we set\n$q(x,y)=0$\n\nFirst note that $q(x,y)$ is the largest integer $z$ less than or equal\nto $x$ such that $zy\\le x$. Let\n$A(y,x)=\\lbrace z\\in \\mathbb{N} \\mid zy \\le x \\rbrace$. Then $A(y,x)$\ncan be rewritten as\n$$\\lbrace z\\in \\mathbb{N} \\mid z \\le x \\mbox{ and } \\operatorname{sgn}(yz \\dot{-} x)=0 \\rbrace.$$\nDefine $f:\\mathbb{N}^3 \\to \\mathbb{N}$ by\n$f(x,y,t)=\\operatorname{sgn}(yt \\dot{-} x)$. Then\n$$A_f(x,y,t)=\\lbrace z\\in \\mathbb{N} \\mid z\\le t \\mbox{ and }\\operatorname{sgn}(yz \\dot{-} x) = 0 \\rbrace.$$\nSince $f$ is primitive recursive, so is $f_{bmax}(x,y,t)$. Since\n$A(x,y)=A_f(x,y,x)$, the quotient $q(x,y)$ may be defined as\n$f_{bmax}(x,y,x)$, and therefore is primitive recursive.\n\nWith $q(x,y)$, we may define $\\operatorname{rem}(x,y)$, the remainder of\n$x\\div y$, as $x\\dot{-} y q(x,y)$, which is easily seen to be primitive\nrecursive.\n\n**Remark**. Please see for an alternative way of showing that $q(x,y)$\nand $\\operatorname{rem}(x,y)$ are primitive recursive without using\nbounded maximization. In the alternative method, one shows that\n$\\operatorname{rem}(x,y)$ is primitive recursive first. In addition,\n$\\operatorname{rem}(x,0):=0$ in the alternative method, as opposed to\n$x$ discussed here.",
  "language": "INFORMAL",
  "phrase": "Bounded Maximization",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/BoundedMaximization"
    }
  ],
  "indexable": true
}