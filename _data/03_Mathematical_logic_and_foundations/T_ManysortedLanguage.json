{
  "alternatePhrases": [
    "many sorted language",
    "many-sorted logic"
  ],
  "definition": "A many-sorted language is a variation of the classical first-order\nlanguage. Whereas structures of a first-order language consist of a\nsingle universe, structures of a many-sorted language may contain many\n\u201cuniverses\u201d, where each universe is \u201cnamed\u201d by a symbol called \u201csort\u201d,\nhence the name \u201cmany-sorted\u201d.\n\nTo formalize the notion of a many-sorted language, we start with a\nnon-empty set $S$ whose elements we call *sorts*. Let $S^+$ be the set\nof all (finite) non-empty words over $S$. Elements of $S^+$ are called\n*sort types* and are written as tuples. So instead of writing\n$s_1s_2\\cdots s_n \\in S^+$, it is written\n$(s_1, s_2, \\cdots, s_n)\\in S^+$.\n\nThe next item to be defined is the underlying signature of a many-sorted\nlanguage. A signature $\\Sigma$ consists of\n\n-   a non-empty set $S$ of sorts,\n\n-   a set $F$ of function symbols, and\n\n-   a set $R$ of (non-logical) relation symbols,\n\nsuch that each element in $F\\cup R$ corresponds to a sort type. In other\nwords, there is a function $t:F\\cup R\\to S^+$, and for every\n$r\\in F\\cup R$, $t(r)$ is its sort type. An element $c\\in F$ such that\n$t(c)\\in S$ is called a constant symbol (of sort $t(c)$).\n\nIn addition to the signature $\\Sigma$, we introduce additional symbols:\n\n-   the set $V$ of variables, such that each sort $s\\in S$ corresponds\n    to a countably infinite subset $V_s\\subseteq V$ of variables. In\n    other words, there is a function $v:V\\to S$, such that for each\n    $s\\in S$, $v^{-1}(s)$ is countably infinite. For each variable\n    $x\\in V$, its sort is defined to be $v(x)$.\n\n-   logical predicates: $\\vee, \\neg, \\forall$\n\n-   the equality relation symbol: $=$, and\n\n-   the left and right parentheses: $(,)$\n\nUsing $\\Sigma$ and the additional symbols above, we can build terms\ninductively as follows:\n\n-   each variable $x\\in V$ is a term of sort $v(x)$\n\n-   if $f\\in F$ is a function symbol of sort type $(s_1,\\ldots,s_n)$,\n    and for each $i=1,\\ldots,n-1$, $t_i$ is a term of sort $s_i$, then\n    $f(t_1,\\ldots,t_{n-1})$ is a term of sort $s_n$.\n\n-   all the terms are built this way.\n\nFinally, from the terms, we inductively define formulas:\n\n-   if $t_1$ and $t_2$ are terms of the same sort, then $(t_1=t_2)$ is a\n    formula\n\n-   if $r\\in R$ is a relation symbol of sort type $(s_1,\\ldots,s_n)$,\n    and for each $i=1,\\ldots,n$, $t_i$ is a term of sort $s_i$, then\n    $r(t_1,\\ldots,t_n)$ is a formula\n\n-   if $\\alpha$ is a formula, then so is $(\\neg \\alpha)$\n\n-   if $\\alpha,\\beta$ are formulas, then so is $(\\alpha \\vee \\beta)$\n\n-   if $\\alpha$ is a formula and $x\\in V$ is a variable, then so is\n    $(\\forall x (\\alpha))$\n\n-   all the formulas are formed this way.\n\nThe signature $\\Sigma$, additional symbols, and terms and formulas\nsubsequently defined constitute what is known as the *many-sorted\nlanguage* $L=L(\\Sigma)$ on $\\Sigma$.\n\nAs in first order language, the outer most parentheses may be eliminated\nwithout causing much harm, so that $(\\neg \\alpha)$ becomes\n$\\neg \\alpha$. In addition, we may introduce other familiar logical\nsymbols $\\wedge, \\to, \\leftrightarrow$, and $\\exists$ in terms of\n$\\vee,\\neg$, and $\\forall$. The specifics of how this is done can be\nfound in the entry on first order language.\n\nFrom this definition, we see at once that the classical first order\nlanguage is a one-sorted language ($S=1$). Sort types are identified\nwith their lengths. Thus, the sort type of a function or a relation\nsymbol is its arity.\n\n**Remark**. It is not hard to show that a many-sorted language is not\nmuch different from a first-order language. Provided that $V$ is\ncountably infinite, a many-sorted language $L$ can be \u201cconverted\u201d into a\nfirst-ordered language $L_1$. Basically, all the function and relation\nsymbols in $L$ are in $L'$, as well as the additional symbols such as\nvariables and logical symbols. For each sort $s\\in S$, we introduce a\nnew unary relation symbol $P_s$ in $L_1$. For any formula that contains\na subformula of the form $\\forall x \\phi(x)$, we replace each occurrence\nof such a subformula by a formula of the form\n$\\forall x (P_s(x)\\to \\phi(x))$, where $x$ is a variable of sort $s$ and\n$\\phi$ is some formula in which $x$ occurs as a free variable. The\nresult is that $L_1$ becomes a one-sorted language.",
  "language": "INFORMAL",
  "phrase": "Many-Sorted Language",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/ManysortedLanguage"
    }
  ],
  "indexable": true
}