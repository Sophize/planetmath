{
  "alternatePhrases": [
    "phrase-structure grammar",
    "unrestricted grammar",
    "grammar",
    "phrase-structure language",
    "terminal symbol",
    "non-terminal symbol",
    "initial-symbol",
    "initial symbol",
    "start symbol"
  ],
  "definition": "### Introduction {#introduction .unnumbered}\n\nA grammar, loosely speaking, is a set of rules that can be applied to\nwords to generate sentences in a language. For example, with the grammar\nof the English language, one can form syntactically correct sentences\nsuch as \u201cThe elephant drove his bicycle to the moon,\u201d regardless whether\nthe sentence is meaningful or not.\n\nThe mathematical abstraction of a grammar is known as a *formal\ngrammar*. Instead of generating sentences from words, a formal grammar\ngenerates words from symbols and other words. The following basic\ningredients are necessary in a formal grammar:\n\n-   a collection of symbols called an alphabet,\n\n-   a collection of rules, called *rewriting rules*, specifying how one\n    can *generate* new words from existing ones, and\n\n-   a collection of *initial* words that serve to initialize the\n    generation of new words.\n\nTo see how these rewriting rules work, let us look at an example. Let\n$\\lbrace a,b\\rbrace$ be the alphabet as well as the set of initial\nwords. With the rewriting rules given by: from a word $x$ we can form\nthe word $ax$, as well as the word $xa$, we would be able to generate\nwords like $$aa, \\quad aaa, \\quad ab, \\quad baa$$ However, words such as\n$$bb, \\quad baba, \\quad baaab$$ can not be produced.\n\nNote that by adding an extra symbol $\\sigma$ to the above alphabet, and\ntwo additional rewriting rules given by \u201cfrom $\\sigma$ form $a$\u201d and\n\u201cfrom $\\sigma$ form $b$\u201d, it is not hard to see that any word that can\nbe generated by the first grammar can be generated by this new grammar.\n\n### Definition {#definition .unnumbered}\n\nFormalizing what we have discussed above, we say that a *formal grammar*\n$G$ is a quadruple $(\\Sigma,N,P,\\sigma)$, where\n\n1.  $(\\Sigma,P)$ is a rewriting system;\n\n2.  $N$ is a subset of $\\Sigma$ whose elements are called\n    *non-terminals*, and $T:=\\Sigma-N$ the set of *terminals*;\n\n3.  an element $\\sigma\\in N$ called the *starting symbol*.\n\nInstead of writing $G=(\\Sigma,N,P,\\sigma)$, the quadruple\n$(T,N,P,\\sigma)$ is another way of representing $G$ (as long as the\nconditions $\\Sigma=T\\cup N$ and $T\\cap N=\\varnothing$ are satisfied).\n\nA formal grammar is variously known as a *phrase-structure grammar*, an\n*unrestricted grammar*, or simply a *grammar*. A formal grammar is\nsometimes also called a rewriting system in the literature, although the\ntwo notions are distinct on PlanetMath.\n\nGiven a formal grammar $G$, a word $W$ over $\\Sigma$ such that\n$\\sigma {\\stackrel{*}{\\Rightarrow}}W$ is called a *sentential form* of\n$G$. A sentential form over $T$ is called a *word* generated by $G$. The\nset of all words generated by $G$ is called the *formal language*\ngenerated by $G$, and is denoted by $L(G)$. In other words,\n$$L(G):=\\lbrace w\\in T^*\\mid \\sigma {\\stackrel{*}{\\Rightarrow}}w\\rbrace,$$\nwhere ${\\stackrel{*}{\\Rightarrow}}$ is the derivability relation in the\nrewriting system $(\\Sigma,P)$. A *formal language* is also known as a\n*phrase-structure language*.\n\nA language $L$ over an alphabet $A$ is said to be *generable by a formal\ngrammar* if there is a formal grammar $G$ such that $L=L(G)\\cap A^*$.\n\n**Example**. Continuing from the example in the previous section, we can\nput $T=\\lbrace a,b\\rbrace$ and $N=\\lbrace \\sigma\\rbrace$. For the set\n$P$ of productions, we have four\n\n1.  $\\sigma \\to \\sigma a$\n\n2.  $\\sigma \\to a\\sigma$\n\n3.  $\\sigma \\to a$\n\n4.  $\\sigma \\to b$\n\nThen $G=(\\Sigma,N,P,\\sigma)$ is a formal grammar. It is not hard to see\nthat $\\sigma {\\stackrel{*}{\\Rightarrow}}baa$, as\n$\\sigma \\to \\sigma a \\to \\sigma aa \\to baa$. In fact, $L(G)$ consists of\nall words such that $a$ occurs at least once and $b$ occurs at most\nonce.\n\n**Remarks**.\n\n-   Not every language can be generated by a formal grammar. Given a\n    finite alphabet $\\Sigma$, $\\Sigma^*$ is countably infinite, and\n    therefore there are uncountably many languages over $\\Sigma$.\n    However, there are only a countably infinitely many languages that\n    can be generated by formal grammars.\n\n-   Every language generated by a formal grammar is recursively\n    enumerable.\n\n-   Every context-sensitive grammar is equivalent to a formal grammar,\n    and under the Chomsky hierarchy, the class of formal languages is of\n    class $0$.\n\n[9]{} H.R. Lewis, C.H. Papadimitriou [*Elements of the Theory of\nComputation*]{}. Prentice-Hall, Englewood Cliffs, New Jersey (1981).",
  "language": "INFORMAL",
  "phrase": "Formal Grammar",
  "remarks": "",
  "citations": [
    {
      "textCitation": "https://planetmath.org/FormalGrammar"
    }
  ],
  "indexable": true
}